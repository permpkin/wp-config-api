{"version":3,"sources":["../../../../src/icons/generated/EditIcon.js","@views/Config/SchemaList.js"],"names":["svgPaths16","svgPaths20","EditIcon","memo","forwardRef","props","ref","name","PageConfig__SchemaList","state","schemaLabel","tableCols","label","key","tableData","supportsTemplates","ready","mounted","this","updateTableData","a","ConfigService","getSchema","schemaKey","then","documentation","schema","table","getValue","SchemaValue","columns","forEach","row","index","tableRowData","column","undefined","type","to","match","url","appearance","iconBefore","map","item","color","marginRight","id","version","join","toString","push","setState","searchNested","console","log","display","padding","background","flex","alignItems","textTransform","size","PlusIcon","emptyMsg","cols","rows","Component"],"mappings":"oLAGMA,EAAa,CAAnB,6MAGMC,EAAa,CAAnB,wKAIaC,EAAWC,eACtBC,sBAAW,SAAkBC,EAAOC,GAClC,OACE,mCACEN,WADF,EAEEC,WAFF,EAGEK,IAHF,EAIEC,KAAK,QALT,S,kOCJEC,E,kDAEJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,YAAa,MACbC,UAAW,CACT,CAACC,MAAM,MAAOC,IAAK,QAGrBC,UAAW,GACXC,mBAAmB,EACnBC,OAAO,GAET,EAAKC,SAAU,EAZH,E,qDAed,WAGEC,KAAKD,SAAU,EAEfC,KAAKC,oB,kCAIP,WAGED,KAAKD,SAAU,I,oEAIjB,mCAAAG,EAAA,yDAEOF,KAAKD,QAFZ,iDAIEI,IAAcC,UAAUJ,KAAKb,MAAMkB,WAChCC,MAAK,YAAyD,EAAtDC,cAAsD,EAAvCC,OAAwC,IAAhCX,EAA+B,EAA/BA,kBAAmBY,EAAY,EAAZA,MAEjDN,IAAcO,SAAS,EAAKvB,MAAMkB,WAC/BC,MAAK,SAAAK,GAEJ,IAAIlB,EAAYgB,EAAMG,QAElBhB,EAAY,GAGhBe,EAAYE,SAAQ,SAACC,EAAKC,GAExB,IAAIC,EAAe,GAEnBP,EAAMG,QAAQC,SAAQ,SAAAI,GACpBD,EAAaC,EAAOtB,KAAQ,WAC1B,QAAIuB,IAAcJ,EAAIG,EAAOtB,KAC7B,OAAQsB,EAAOE,MACb,IAAK,MACH,OAAQ,kBAAC,IAAD,CAASxB,IAAKmB,EAAIG,EAAOtB,KAAMyB,GAAE,UAAK,EAAKjC,MAAMkC,MAAMC,IAAtB,YAA6BR,EAAInB,MAAO,kBAAC,IAAD,CAAQ4B,WAAW,UAAUC,WAAYxC,KAAW8B,EAAIG,EAAOtB,OAClJ,IAAK,UACH,OAA4B,IAApBmB,EAAIG,EAAOtB,KAAiB,kBAAC,IAAD,MAAgB,kBAAC,IAAD,MACtD,IAAK,eACH,OAAQmB,EAAIG,EAAOtB,KAAK8B,KAAI,SAACC,EAAMX,GAEjC,OAAQ,kBAAC,IAAD,CAAOpB,IAAKoB,EAAOY,MAAM,UAAUC,YAAa,GAAoB,kBAATF,EAAqBA,EAA5B,UAAwCA,EAAKG,GAA7C,YAAmDH,EAAKI,aAExH,IAAK,WACH,OAAQ,kBAAC,IAAD,KAAOhB,EAAIG,EAAOtB,KAAKoC,KAAK,OACtC,QACE,OAAQ,kBAAC,IAAD,KAAOjB,EAAIG,EAAOtB,KAAKqC,aAfT,MAoB9BpC,EAAUqC,KAAKjB,MAIZ,EAAKjB,SAEV,EAAKmC,SAAS,CACZrC,kBAAmBA,IAAqB,EACxCJ,UAAWA,EACXG,UAAWA,EACXE,OAAO,WAOjB,UAAIE,KAAKb,aAAT,aAAI,EAAYgD,eAGdC,QAAQC,IAAI,wBA5DhB,gD,0EAkEA,WACE,OACE,iCACE,kBAAC,IAAD,CAAMC,QAAQ,OAAOC,QAAQ,OAAOC,WAAW,SAC7C,kBAAC,IAAD,CAAMC,KAAM,EAAGC,WAAW,SAASJ,QAAQ,QACzC,kBAAC,IAAD,CAASK,cAAc,aAAaC,KAAM,KAAM5C,KAAKb,MAAMkB,YAE7D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASe,GAAE,UAAKpB,KAAKb,MAAMkC,MAAMC,IAAtB,SAAiC,kBAAC,IAAD,CAAQC,WAAW,UAAUC,WAAYqB,KAAzC,cAGhD,kBAAC,IAAD,KAEK7C,KAAKT,MAAMO,MACX,kBAAC,IAAD,CAAUgD,SAAQ,aAAQ9C,KAAKb,MAAMkB,WAAa0C,KAAM/C,KAAKT,MAAME,UAAWuD,KAAMhD,KAAKT,MAAMK,YAChG,kBAAC,IAAD,Y,GAlHyBqD,aA0HtB3D","file":"static/js/6.70b6c444.chunk.js","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M3.25 10.26l2.47 2.47 6.69-6.69-2.46-2.48-6.7 6.7zM.99 14.99l3.86-1.39-2.46-2.44-1.4 3.83zm12.25-14c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.44-1.44c.32-.32.51-.75.51-1.24.01-.95-.77-1.74-1.74-1.74z'\n]\nconst svgPaths20 = [\n  'M4.59 12.59l2.83 2.83 7.65-7.65-2.83-2.83-7.65 7.65zM2 18l4.41-1.59-2.81-2.79L2 18zM16 2c-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.65-1.65A2.006 2.006 0 0016 2z'\n]\n\nexport const EditIcon = memo(\n  forwardRef(function EditIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"edit\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { Component } from 'react'\nimport TableCmp from '../../@components/TableCmp';\nimport { NavLink } from 'react-router-dom';\nimport Busy from '../../@components/Busy';\nimport ConfigService from '../../@services/Config';\n\nimport { Pane, Heading, Button, EditIcon, Badge, PlusIcon, Text, TickIcon, CrossIcon } from 'evergreen-ui'\n\nclass PageConfig__SchemaList extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      schemaLabel: '...',\n      tableCols: [\n        {label:'Key', key: 'key'},\n        // {label:'Description', key: 'description'}\n      ],\n      tableData: [],\n      supportsTemplates: false,\n      ready: false\n    }\n    this.mounted = false\n  }\n  \n  componentDidMount()\n  {\n    \n    this.mounted = true\n    \n    this.updateTableData();\n\n  }\n\n  componentWillUnmount()\n  {\n    \n    this.mounted = false\n\n  }\n\n  async updateTableData() {\n    \n    if (!this.mounted) return;\n    \n    ConfigService.getSchema(this.props.schemaKey)\n      .then(({ documentation, schema, supportsTemplates, table }) => {\n\n        ConfigService.getValue(this.props.schemaKey)\n          .then(SchemaValue => {\n\n            var tableCols = table.columns;\n\n            var tableData = [];\n\n            // run through each result, populate table columns\n            SchemaValue.forEach((row, index) => {\n\n              var tableRowData = {}\n\n              table.columns.forEach(column => {\n                tableRowData[column.key] = (() => {\n                  if (undefined === row[column.key]) return;\n                  switch (column.type) {\n                    case 'key':\n                      return (<NavLink key={row[column.key]} to={`${this.props.match.url}/${row.key}`}><Button appearance=\"minimal\" iconBefore={EditIcon}>{row[column.key]}</Button></NavLink>);\n                    case 'boolean':\n                      return (row[column.key] === true ? (<TickIcon/>) : (<CrossIcon/>));\n                    case 'dependency[]':\n                      return (row[column.key].map((item, index) => {\n                        // TODO: add \"is internal\" check, and link to source.\n                        return (<Badge key={index} color=\"neutral\" marginRight={3}>{typeof item === \"string\" ? (item) : (`${item.id}@${item.version}`)}</Badge>)\n                      }))\n                    case 'string[]':\n                      return (<Text>{row[column.key].join(', ')}</Text>);\n                    default:\n                      return (<Text>{row[column.key].toString()}</Text>);\n                  }\n                })()\n              })\n\n              tableData.push(tableRowData)\n\n            })\n        \n            if (!this.mounted) return;\n  \n            this.setState({\n              supportsTemplates: supportsTemplates || false,\n              tableCols: tableCols,\n              tableData: tableData,\n              ready: true\n            });\n\n          })\n\n      })\n\n    if (this.props?.searchNested) {\n      \n      // TODO: find records of this \"type\" in other nested types\n      console.log(\"SEARCH_NESTED_FIELDS\");\n\n    }\n    \n  }\n\n  render() {\n    return (\n      <article>\n        <Pane display=\"flex\" padding=\".5em\" background=\"tint2\">\n          <Pane flex={1} alignItems=\"center\" display=\"flex\">\n            <Heading textTransform=\"capitalize\" size={600}>{this.props.schemaKey}</Heading>\n          </Pane>\n          <Pane>\n            <NavLink to={`${this.props.match.url}/new`}><Button appearance=\"minimal\" iconBefore={PlusIcon}>Add New</Button></NavLink>\n          </Pane>\n        </Pane>\n        <Pane>\n          {\n            (this.state.ready) ?\n            (<TableCmp emptyMsg={`No ${this.props.schemaKey}`} cols={this.state.tableCols} rows={this.state.tableData} />) :\n            <Busy/>\n          }\n        </Pane>\n      </article>\n    )\n  }\n}\n\nexport default PageConfig__SchemaList;"],"sourceRoot":""}