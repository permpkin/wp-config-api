{"version":3,"sources":["@components/TableCmp.js","@schema lazy /^/.//.*$/ groupOptions: {} namespace object","@components/FormCheckbox.js","@components/FormBoolean.js","@components/FormKeys.js","@components/FormText.js","@components/FormSelect.js","@components/FormStringArray.js","@components/FormTextArea.js","@components/FormRepeater.js","@components/FormField.js","@components/Form.js","@components/Code.js","@views/Config/SchemaEdit.js"],"names":["TableCmp","props","state","emptyMsg","this","Head","cols","map","col","index","TextHeaderCell","key","label","Body","rows","length","row","Row","height","isSelectable","TextCell","color","Component","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","FormCheckbox","name","options","defaultValue","className","description","opt","Checkbox","checked","onChange","FormBoolean","Switch","field","value","hasCheckIcon","FormKeys","fieldData","ready","handleChange","bind","setState","errors","placeholder","type","undefined","default","FormText","event","target","TextInput","FormSelect","Select","FormStringArray","TagInput","inputProps","values","FormTextArea","Textarea","FormRepeater","showAddRow","isNewField","change","Pane","display","justifyContent","borderBottom","startsWith","LinkIcon","size","marginRight","marginBottom","Button","appearance","iconBefore","PlusIcon","onClick","preventDefault","columns","SideSheet","isShown","onCloseComplete","data","padding","background","flex","alignItems","Heading","FloppyDiskIcon","FormField","getFieldType","Form","children","Code","codeString","Pre","minHeight","PageConfig__SchemaEdit","busy","isDeleteShown","mounted","saveDocument","a","isNew","match","params","schemaKey","SchemaCmp","ConfigService","getSchema","documentation","schema","supportsTemplates","table","getValue","SchemaValue","isSingular","filter","item","SchemaFormValue","forEach","version","Values","k","Value","formData","Busy","SavedIcon","TickIcon","backgroundColor","EditIcon","intent","TrashIcon","formString","Dialog","hasHeader","isConfirmLoading","onConfirm","delete","formDoc","config","res","history","goBack","toaster","success","confirmLabel","Paragraph","schemaPath"],"mappings":"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","file":"static/js/17.8bcbcfef.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Table, Text } from 'evergreen-ui'\n\nclass TableCmp extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      emptyMsg: 'No Results',\n      ...props\n    }\n  }\n  render() {\n    return (\n      <Table>\n      {\n        ('cols' in this.props)?(\n          <Table.Head>\n            {this.props.cols.map((col, index) => (<Table.TextHeaderCell key={col.key}>{col.label}</Table.TextHeaderCell>))}\n          </Table.Head>\n        ):null\n      }\n      <Table.Body>\n        {\n          (('rows' in this.props && this.props.rows.length)?(\n            this.props.rows.map((row, index) => (\n              <Table.Row key={index} height=\"auto\" isSelectable>\n                {this.props.cols.map(col => (\n                  <Table.TextCell key={col.key} height={50}>{row[col.key]}</Table.TextCell>)\n                )} \n              </Table.Row>\n            ))\n          ):(<Table.Row height={50}><Table.TextCell><Text color=\"muted\">{this.state.emptyMsg}</Text></Table.TextCell></Table.Row>))\n        }\n        \n      </Table.Body>\n      </Table>\n    )\n  }\n}\n\nexport default TableCmp;\n","var map = {\n\t\"./Blocks\": [\n\t\t207,\n\t\t2\n\t],\n\t\"./Blocks.js\": [\n\t\t207,\n\t\t2\n\t],\n\t\"./CustomFields\": [\n\t\t208,\n\t\t3\n\t],\n\t\"./CustomFields.js\": [\n\t\t208,\n\t\t3\n\t],\n\t\"./CustomPostType\": [\n\t\t209,\n\t\t4\n\t],\n\t\"./CustomPostType.js\": [\n\t\t209,\n\t\t4\n\t],\n\t\"./Pages\": [\n\t\t210,\n\t\t5\n\t],\n\t\"./Pages.js\": [\n\t\t210,\n\t\t5\n\t],\n\t\"./SchemaConfig\": [\n\t\t202,\n\t\t10\n\t],\n\t\"./SchemaConfig.js\": [\n\t\t202,\n\t\t10\n\t],\n\t\"./Scripts\": [\n\t\t211,\n\t\t6\n\t],\n\t\"./Scripts.js\": [\n\t\t211,\n\t\t6\n\t],\n\t\"./Settings\": [\n\t\t212,\n\t\t7\n\t],\n\t\"./Settings.js\": [\n\t\t212,\n\t\t7\n\t],\n\t\"./Styles\": [\n\t\t213,\n\t\t8\n\t],\n\t\"./Styles.js\": [\n\t\t213,\n\t\t8\n\t],\n\t\"./Taxonomies\": [\n\t\t214,\n\t\t9\n\t],\n\t\"./Taxonomies.js\": [\n\t\t214,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 216;\nmodule.exports = webpackAsyncContext;","import React, { Component } from 'react'\nimport { Checkbox } from 'evergreen-ui'\n\nclass FormCheckbox extends Component {\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      label: false,\n      name: '',\n      options: [],\n      defaultValue: [],\n      ...props\n    }\n  }\n  render() {\n    return (\n      <div className=\"form-block__field\">\n        <label className=\"form-block__field-label\">{this.state.label}</label>\n        {(this.state.description?(\n          <small className=\"form-block__field-describe\">{this.state.description}</small>\n        ):null)}\n        <ul className=\"form-block__field\">\n          {this.state.options?this.state.options.map((opt, index) => (\n            <li key={index}>\n              <label>\n                <Checkbox\n                  checked={opt}\n                  onChange={this.props.onChange}\n                  // onChange={e => setState({ checked: e.target.checked })}\n                />\n                <span className=\"form-block__field-value\">\n                  {opt}\n                </span>\n              </label>\n            </li>\n          )):null}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default FormCheckbox;\n","import React, { Component } from 'react'\nimport { Switch } from 'evergreen-ui'\n\nclass FormBoolean extends Component {\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      // defaultValue: false,\n      // field: props.field\n    }\n    // if (this.props.value === undefined) this.state.field.value = this.state.defaultValue;\n    // this.handleChange = this.handleChange.bind(this)\n    // console.log(this.props)\n  }\n  render() {\n    return (\n      <div>\n        <label className=\"form-block__field-label\">\n          <Switch height={20}\n            checked={this.props.field.value}\n            onChange={this.props.onChange}\n            hasCheckIcon={true}\n          />\n          <span className=\"field-label__content\">{this.props.field.label}</span>\n        </label>\n        {(this.props.field.description?(\n          <small className=\"form-block__field-describe\">{this.props.field.description}</small>\n        ):null)}\n      </div>\n    )\n  }\n}\n\nexport default FormBoolean;\n","import React, { Component } from 'react'\nimport FormField from './FormField'\n\nclass FormKeys extends Component {\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      defaultValue: {},\n      field: props.field,\n      fieldData: [],\n      ready: false\n    }\n    // this.parseObjectDefaults = this.parseObjectDefaults.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n  componentDidMount()\n  {\n    this.setState({\n      // field: fieldValue,\n      ready: true\n    })\n  }\n  // parseObjectDefaults()\n  // {\n  //   var $value = {};\n\n  //   if (this.props.field.value === undefined) {\n  //     this.props.field.value = {}\n  //   }\n    \n  //   Object.keys(this.props.field.value).filter(key => {\n    \n  //     // ignore keys already set.\n  //     return !$value.hasOwnProperty(key)\n    \n  //   }).forEach((key) => {\n\n  //     // if allowOther is true and this is not a default field, add custom fields\n  //     if (this.props.field.default.hasOwnProperty(key) || this.props.field?.allowOther === true)\n  //     {\n      \n  //       $value[key] = {\n  //         type: !this.props.field.default.hasOwnProperty(key) ? 'text' : this.props.field.default[key].type,\n  //         value: this.props.field.value[key].value === this.props.field.default[key].value ? '' : this.props.field.value[key].value\n  //       }\n\n  //     }\n\n  //   })\n\n  //   var fieldValue = this.state.field;\n\n  //   fieldValue.value = $value;\n\n  //   this.setState({\n  //     // field: fieldValue,\n  //     ready: true\n  //   })\n\n  // }\n  handleChange(field, value)\n  {\n    \n    // var parseValue = this.state.field.value\n    \n    // parseValue[field].value = value\n    \n    // this.setState({\n    //   field: {...this.state.field, value: parseValue}\n    // })\n    \n    // // var passthroughData = {};\n    \n    // // Object.keys(this.state.field.value).forEach(key=>{\n    // //   passthroughData[key] = this.state.field.value[key].value\n    // // })\n    \n    // this.props.onChange(this.props.field.key, this.state.field.value)\n\n  }\n  render() {\n    return (\n      <div className=\"form-block__field\">\n        <label className=\"form-block__field-label\">{this.props.field.label}</label>\n        {(this.props.field.description?(\n          <small className=\"form-block__field-describe\">{this.props.field.description}</small>\n        ):null)}\n        <ul className=\"form-block__field-list --key-list\">\n          {this.state.ready?Object.keys(this.props.field.keys).map((key, index) => (\n            <li key={index}>\n              <FormField onChange={this.handleChange} field={{\n                errors: this.props.field.errors,\n                label: key,\n                placeholder: this.props.field.keys[key]?.placeholder,\n                type: this.props.field.keys[key].type,\n                value: undefined === this.props.field.value ? ( \"default\" in this.props.field.keys[key] ? this.props.field.keys[key].default : undefined ) : ( key in this.props.field.value ? this.props.field.value[key] : undefined ),\n                description: this.props.field.keys[key]?.description\n              }}/>\n            </li>\n          )):null}\n        </ul>\n      </div>\n    )\n  }\n}\n\nexport default FormKeys;\n","import React, { Component } from 'react'\nimport { TextInput } from 'evergreen-ui'\n\nclass FormText extends Component {\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      defaultValue: '',\n      field: props.field\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(event)\n  {\n    this.props.onChange(this.props.field.key, event.target.value)\n    this.setState({\n      field: {...this.state.field, value: event.target.value}\n    })\n  }\n  render() {\n    return (\n      <div className=\"form-block__field\">\n        {(this.props.field.label?(\n          <label className=\"form-block__field-label\">{this.props.field.label}</label>\n        ):null)}\n        {(this.props.field.description?(\n          <small className=\"form-block__field-describe\">{this.props.field.description}</small>\n        ):null)}\n        <TextInput\n          onChange={this.handleChange}\n          value={this.state.field.value}\n          placeholder={this.props.field?.placeholder}\n        />\n      </div>\n    )\n  }\n}\n\nexport default FormText;\n","import React, { Component } from 'react'\nimport { Select } from 'evergreen-ui'\n\nclass FormSelect extends Component {\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      defaultValue: '',\n      field: props.field\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(event)\n  {\n    this.props.onChange(this.props.field.key, event.target.value)\n    this.setState({\n      field: {...this.state.field, value: event.target.value}\n    })\n  }\n  render() {\n    return (\n      <div className=\"form-block__field\">\n        <label className=\"form-block__field-label\">{this.props.field.label}</label>\n        {(this.props.field.description?(\n          <small className=\"form-block__field-describe\">{this.props.field.description}</small>\n        ):null)}\n        <Select onChange={this.handleChange}>\n          {this.props.field.options?this.props.field.options.map((opt, index) => (\n            <option key={index} value={opt}>\n              {opt}\n            </option>\n          )):null}\n        </Select>\n      </div>\n    )\n  }\n}\n\nexport default FormSelect;\n","import React, { Component } from 'react'\nimport { TagInput } from 'evergreen-ui'\n\nclass FormStringArray extends Component {\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      // defaultValue: [],\n      // field: props.field\n    }\n    // if (props.field.value === undefined) this.state.field.value = this.state.defaultValue;\n    // this.handleChange = this.handleChange.bind(this)\n  }\n  // handleChange(change)\n  // {\n  //   this.setState({\n  //     field: { ...this.state.field, value: change.values }\n  //   })\n  //   this.props.onChange(this.props.field.key, change.values)\n  // }\n  render() {\n    return (\n      <div className=\"form-block__field\">\n        <label className=\"form-block__field-label\">{this.props.field.label}</label>\n        {(this.props.field.description?(\n          <small className=\"form-block__field-describe\">{this.props.field.description}</small>\n        ):null)}\n        <TagInput\n          inputProps={{ placeholder: this.props.field.placeholder || 'Type here...' }}\n          values={this.props.field.value}\n          // onChange={values => {\n          //   this.handleChange({ values })\n          // }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default FormStringArray;\n","import React, { Component } from 'react'\nimport { Textarea } from 'evergreen-ui'\n\nclass FormTextArea extends Component {\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      defaultValue: '',\n      field: props.field\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(event)\n  {\n    this.props.onChange(this.props.field.key, event.target.value)\n    this.setState({\n      field: {...this.state.field, value: event.target.value}\n    })\n  }\n  render() {\n    return (\n      <div className=\"form-block__field\">\n        {(this.props.field.label?(\n          <label className=\"form-block__field-label\">{this.props.field.label}</label>\n        ):null)}\n        {(this.props.field.description?(\n          <small className=\"form-block__field-describe\">{this.props.field.description}</small>\n        ):null)}\n        <Textarea\n          onChange={this.handleChange}\n          value={this.state.field.value}\n          placeholder={this.props.field?.placeholder}\n        />\n      </div>\n    )\n  }\n}\n\nexport default FormTextArea;\n","import React, { Component } from 'react'\nimport { Button, Pane, PlusIcon, LinkIcon, SideSheet, FloppyDiskIcon, Heading } from 'evergreen-ui'\nimport TableCmp from './TableCmp';\nimport Form from './Form';\n\nclass FormRepeater extends Component {\n  constructor(props)\n  {\n    super(props)\n    var fieldData = {}\n    fieldData[this.props.field.key] = this.props.field\n    // TODO: replace field ref to type lookup ( using this.props.field.repeater )\n    this.state = {\n      defaultValue: [],\n      showAddRow: false,\n      isNewField: true,\n      fieldData: fieldData\n      // field: props.field\n    }\n    // if (props.field.value === undefined) this.props.field.value = this.props.defaultValue;\n    this.handleChange = this.handleChange.bind(this)\n  }\n  handleChange(change)\n  {\n    // this.setState({\n    //   field: { ...this.props.field, value: change.values }\n    // })\n    // this.props.onChange(this.props.field.key, change.values)\n  }\n  render() {\n    return (\n      <div className=\"form-block__field\">\n        <Pane display=\"flex\" justifyContent=\"space-between\" borderBottom=\"muted\">\n          <Pane>\n            <label className=\"form-block__field-label\">{\n              this.props.field.key.startsWith(\"@\")?(\n                <LinkIcon size={10} color=\"selected\" marginRight=\".5em\"/>\n              ):null\n            }{this.props.field.label}</label>\n            {(this.props.field.description?(\n              <small className=\"form-block__field-describe\">{this.props.field.description}</small>\n            ):null)}\n          </Pane>\n          <Pane marginBottom=\".5em\">\n            <Button appearance=\"minimal\" iconBefore={PlusIcon} onClick={(e) => { e.preventDefault(); this.setState({ showAddRow: true })}}>Add {this.props.field.label}</Button>\n          </Pane>\n        </Pane>\n        <Pane>\n          <TableCmp emptyMsg={`No ${this.props.field.label}`} cols={this.props.field?.columns} rows={this.props.field.value || []} />\n        </Pane>\n        <SideSheet\n          isShown={this.state.showAddRow}\n          onCloseComplete={() => this.setState({ showAddRow: false })}\n        >\n          <Form className=\"split-content__form\" onChange={this.handleChange} data={this.state.fieldData}>\n            <Pane display=\"flex\" padding=\"1em\" background=\"tint2\" borderBottom=\"muted\">\n              <Pane flex={1} alignItems=\"center\" display=\"flex\">\n                <Heading size={600}>{`${this.state.isNewField?'Add':'Edit'} ${this.props.field.label}`}</Heading>\n              </Pane>\n              <Pane>\n                <Button appearance=\"minimal\" iconBefore={FloppyDiskIcon}>{this.state.isNewField?'Save':'Update'}</Button>\n              </Pane>\n            </Pane>\n          </Form>\n        </SideSheet>\n      </div>\n    )\n  }\n}\n\nexport default FormRepeater;\n","import React, { Component } from 'react'\nimport FormCheckbox from './FormCheckbox'\nimport FormBoolean from './FormBoolean'\nimport FormKeys from './FormKeys'\nimport FormText from './FormText'\nimport FormSelect from './FormSelect'\n// import FormMultiSelect from './FormMultiSelect'\nimport FormStringArray from './FormStringArray'\n// import FormString from './FormString'\nimport FormTextArea from './FormTextArea'\nimport FormRepeater from './FormRepeater'\n\nclass FormField extends Component {\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      // key: null,\n      // label: false,\n      // description: false,\n      // errors: [],\n      // type: 'text',\n      // field: {\n      //   key: null,\n      //   label: false,\n      //   description: false,\n      //   errors: [],\n      //   type: 'text',\n      //   ...props.field\n      // }\n    }\n  }\n  getFieldType(type) \n  {\n    switch(type)\n    {\n      case 'checkbox':\n        return (<FormCheckbox onChange={this.props.field.onChange} field={this.props.field}/>)\n      case 'boolean':\n        return (<FormBoolean onChange={this.props.field.onChange} field={this.props.field}/>)\n      case 'keys':\n        return (<FormKeys onChange={this.props.field.onChange} field={this.props.field}/>)\n      case 'text':\n        return (<FormText onChange={this.props.field.onChange} field={this.props.field}/>)\n      case 'textarea':\n        return (<FormTextArea onChange={this.props.field.onChange} field={this.props.field}/>)\n      case 'select':\n        return (<FormSelect onChange={this.props.field.onChange} field={this.props.field}/>)\n      // case 'multiselect':\n      //   return (<FormMultiSelect onChange={this.props.field.onChange} field={this.props.field}/>)\n      case 'string[]':\n        return (<FormStringArray onChange={this.props.field.onChange} field={this.props.field}/>)\n      case 'repeater':\n        return (<FormRepeater onChange={this.props.field.onChange} field={this.props.field}/>)\n      default:\n        return (<>\n          {(this.props.field.label?(\n            <label className=\"form-block__field-label\">{this.props.field.label}</label>\n          ):null)}\n          {(this.props.field.description?(\n            <small className=\"form-block__field-describe\">{this.props.field.description}</small>\n          ):null)}\n        </>)\n    }\n  }\n  render() {\n    return (\n      <div className={`form-field${this.props.field.errors.length?' --error':''}`}>\n        {this.getFieldType(this.props.field.type)}\n      </div>\n    )\n  }\n}\n\nexport default FormField;\n","import React, { Component } from 'react'\nimport FormField from './FormField';\n// import FormGroup from './FormGroup'\n\nclass Form extends Component {\n  render() {\n    return (\n      <form className=\"form-block\">\n        <div className=\"form-block__heading\">{this.props.children}</div>\n        <div className=\"form-block__body\">\n          <div className=\"form-block__group\">\n            {this.props.data?Object.keys(this.props.data).map((key, index) => (\n              <FormField key={key} field={this.props.data[key]}/>\n            )):null}\n          </div>\n          {/* {this.state.data?Object.keys(this.state.data).map((key, index) => (\n            <FormGroup key={index} onChange={(key, this.state.data[key]) => this.props.onChange(index, key, this.state.data[key])}/>\n          )):null} */}\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default Form;\n","import React, { Component } from 'react'\nimport { Pre } from 'evergreen-ui'\n// import MonacoEditor from 'react-monaco-editor';\n\nclass Code extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: props.codeString || '// empty file'\n    }\n  }\n  // editorDidMount(editor, monaco) {\n  //   console.log('editorDidMount', editor);\n  //   editor.focus();\n  // }\n  // onChange(newValue, e) {\n  //   console.log('onChange', newValue, e);\n  // }\n  static getDerivedStateFromProps(props, state)\n  {\n    if (props.code !== state.code)\n      return {\n        code: props.codeString\n      };\n    return null;\n  }\n  render() {\n    const code = this.state.code;\n    return (\n      <Pre minHeight={'100%'}>\n        <code>{this.state.code}</code>\n      </Pre>\n      // <MonacoEditor\n      //   // width=\"800\"\n      //   height=\"600\"\n      //   language=\"json\"\n      //   theme=\"vs-dark\"\n      //   value={code}\n      //   options={options}\n      //   // onChange={this.onChange}\n      //   // editorDidMount={this.editorDidMount}\n      // />\n    )\n  }\n}\n\nexport default Code;\n","import React, { Component } from 'react'\n// import { withRouter } from 'react-router-dom'\nimport Form from '../../@components/Form';\nimport ConfigService from '../../@services/Config';\nimport Code from '../../@components/Code';\n\nimport { SideSheet, Pane, Dialog, EditIcon, TickIcon, SavedIcon, TrashIcon, Heading, Paragraph, Button, FloppyDiskIcon, toaster } from 'evergreen-ui'\nimport Busy from '../../@components/Busy';\n\nclass PageConfig__SchemaEdit extends Component {\n\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      ready: false,\n      busy: true,\n      isDeleteShown: false,\n      isShown: false\n    }\n    this.mounted = false\n    this.saveDocument = this.saveDocument.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n  }\n  \n  async componentDidMount()\n  {\n\n    var isNew = this.props.match?.params.id === \"new\"\n\n    this.mounted = true\n      \n    import(`../../@schema/${this.props.schemaKey}`)\n      .then(SchemaCmp => new SchemaCmp.default())\n      .then(SchemaCmp=>{\n    \n        // TODO: cache schema response\n        ConfigService.getSchema(SchemaCmp.key)\n          .then(({ documentation, schema, supportsTemplates, table }) => {\n\n            if (!this.mounted) return;\n            \n            ConfigService.getValue(SchemaCmp.key)\n              .then(SchemaValue => this.props?.isSingular ? {} : SchemaValue.filter(item => item.key === this.props.match.params?.id))\n              .then(SchemaValue => this.props?.isSingular ? {} : (SchemaValue.length ? SchemaValue[0] : false))\n              .then(SchemaValue => isNew ? {} : SchemaValue)\n              .then(SchemaValue => {\n\n                if (!this.mounted) return;\n                \n                if (!SchemaValue && !isNew) return;\n\n                var SchemaFormValue = {}\n\n                Object.keys(schema).forEach(key => {\n\n                  SchemaFormValue[key] = {\n                    ...schema[key],\n                    key: key,\n                    errors: [],\n                    onChange: (value) => {\n                      this.value = value;\n                    },\n                    value: (() => {\n                      \n                      if (!(key in SchemaValue) || SchemaValue[key] === undefined) return schema[key].default || undefined;\n\n                      switch (schema[key]?.type)\n                      {\n                        case 'string[]':\n                          return SchemaValue[key].map(item => { return typeof item === \"string\" ? (item) : (`${item.id}@${item.version}`) });\n                        case 'keys':\n                          return (() => {\n                            var Values = {}\n                            Object.keys(schema[key].keys).forEach(k => {\n                              var Value = (k in SchemaValue[key]) ? SchemaValue[key][k] : (schema[key][k]?.default);\n                              if (undefined !== Value) Values[k] = Value;\n                            })\n                            return Values\n                          })();\n                        default:\n                          return SchemaValue[key];\n                      }\n\n                    })()\n                  }\n\n                  // post value set field mods\n                  if (schema[key]?.type === 'repeater')\n                  {\n                    SchemaFormValue[key].columns = 'columns' in SchemaFormValue[key] ? SchemaFormValue[key].columns : [{label:'Key', key: 'key'}];\n                  }\n\n                })\n\n                this.setState({\n                  isNew: isNew,\n                  supportsTemplates: supportsTemplates,\n                  formData: SchemaFormValue,\n                  busy: false,\n                  ready: true\n                })\n\n              })\n            \n          })\n\n      })\n\n  }\n\n  componentWillUnmount()\n  {\n    this.mounted = false\n  }\n\n  saveDocument(e)\n  {\n    e.preventDefault()\n    // this.setState({\n    //   busy: true\n    // })\n    // ConfigService.insert(this.props.schemaKey, JSON.parse(this.state.formString))\n    //   .then(() => {\n    //     toaster.success(\n    //       'Saved Successfully',\n    //       {\n    //         description: 'Connect your source to a destination to receive data.'\n    //       }\n    //     )\n        \n    //     if (!this.mounted) return;\n\n    //     this.setState({\n    //       isNew: false,\n    //       busy: false\n    //     })\n    //   })\n    //   .catch(res => {\n    //     toaster.danger(\n    //       'Error(s) Occurred!',\n    //       {\n    //         description: res\n    //       }\n    //     )\n        \n    //     if (!this.mounted) return;\n\n    //     this.setState({\n    //       busy: false\n    //     })\n    //   })\n  }\n\n  handleChange(index, field, value)\n  {\n    // if (!this.mounted) return;\n\n    // var formDoc = this.state.formDoc\n    \n    // var updatedField = formDoc.formData[index].fields.filter((item) => item.key === field).pop()\n\n    // updatedField.value = value\n    \n    // formDoc.formData[index].fields[(formDoc.formData[index].fields.findIndex((e)=>e.key === field))] = updatedField\n    // formDoc.config[field] = value\n    \n    // if (!this.mounted) return;\n\n    // this.setState({\n    //   formDoc: formDoc,\n    //   formData: formDoc.formData,\n    //   formString: JSON.stringify(formDoc.getValue(), null, 4),\n    // })\n  }\n\n  render() {\n    return (\n      <article>\n        {this.state.ready?(\n          <section className=\"split-content\">\n            <div className=\"split-content__left\">\n              {(!this.state.busy)?(\n                <Form className=\"split-content__form\" onChange={this.handleChange} data={this.state.formData}>\n                  <Pane display=\"flex\" padding=\".5em\" background=\"tint2\">\n                    <Pane flex={1} alignItems=\"center\" display=\"flex\">\n                      <Heading size={600}>{`${this.props.schemaKey} Config`}</Heading>\n                    </Pane>\n                    <Pane>\n                      {this.state.supportsTemplates?(\n                        <Button appearance=\"minimal\" iconBefore={SavedIcon}>Save as Template</Button>\n                      ):null}\n                      <Button appearance=\"minimal\" iconBefore={TickIcon}>Validate</Button>\n                    </Pane>\n                  </Pane>\n                </Form>\n              ):<Busy/>}\n            </div>\n            <div className=\"split-content__right\">\n              <Pane padding='.5em' backgroundColor='white' borderBottom=\"muted\">\n                <Button appearance=\"minimal\" onClick={this.saveDocument} iconBefore={FloppyDiskIcon}>{this.state.isNew?'Save':'Update'}</Button>\n                <Button appearance=\"minimal\" iconBefore={EditIcon} onClick={(e) => { e.preventDefault(); this.setState({ isShown: true }) }}>Edit Json</Button>\n                {!this.state.isNew?(<Button appearance=\"minimal\" intent=\"danger\" marginRight={'.5em'} iconBefore={TrashIcon} onClick={(e) => { e.preventDefault(); this.setState({ isDeleteShown: true })}}>Delete</Button>):(null)}\n              </Pane>\n            </div>\n          </section>\n        ):null}\n        <SideSheet\n          isShown={this.state.isShown}\n          onCloseComplete={() => this.setState({ isShown: false })}\n        >\n          <Code codeString={this.state.formString} />\n        </SideSheet>\n        <Dialog\n          isShown={this.state.isDeleteShown}\n          hasHeader={false}\n          intent=\"danger\"\n          isConfirmLoading={this.state.busy}\n          onConfirm={() => {\n            this.setState({ busy: true })\n            ConfigService.delete(this.props.schemaKey, this.state.formDoc.config.key)\n              .then(res => {\n                this.setState({ isDeleteShown: false })\n                this.props.history.goBack()\n                toaster.success(\n                  'Removed Successfully',\n                  {\n                    description: 'Connect your source to a destination to receive data.'\n                  }\n                )\n              })\n          }}\n          onCloseComplete={() => this.setState({ isDeleteShown: false, busy: false })}\n          confirmLabel=\"Delete\"\n        >\n          <Heading size={600}>Are you sure?</Heading>\n          <Paragraph size={400} color=\"muted\">\n            Removing this {this.props.schemaPath} may effect other components that require it.\n          </Paragraph>\n        </Dialog>\n      </article>\n    )\n  }\n}\n\nexport default PageConfig__SchemaEdit;\n"],"sourceRoot":""}