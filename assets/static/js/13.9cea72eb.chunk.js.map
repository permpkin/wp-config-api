{"version":3,"sources":["../../../../src/icons/generated/AnnotationIcon.js","@views/Tools/Environment.js"],"names":["svgPaths16","svgPaths20","AnnotationIcon","memo","forwardRef","props","ref","name","PageToolsEnvironment","state","tableCols","label","key","tableData","formData","isAddShown","ready","mounted","this","updateTableData","a","ConfigService","getEnv","then","values","setState","map","item","root","marginTop","color","value","shared","display","padding","background","flex","alignItems","size","appearance","iconBefore","onClick","emptyMsg","cols","rows","isShown","hasHeader","intent","isConfirmLoading","addBusy","onConfirm","onCloseComplete","confirmLabel","marginBottom","className","onChange","handleChange","data","Component"],"mappings":"qLAGMA,EAAa,CAAnB,kRAGMC,EAAa,CAAnB,iRAIaC,EAAiBC,eAC5BC,sBAAW,SAAwBC,EAAOC,GACxC,OACE,mCACEN,WADF,EAEEC,WAFF,EAGEK,IAHF,EAIEC,KAAK,cALT,S,iNCLEC,E,kDAEJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,UAAW,CACT,CAACC,MAAM,MAAOC,IAAK,OACnB,CAACD,MAAM,QAASC,IAAK,UAEvBC,UAAW,GACXC,SAAU,GACVC,YAAY,EACZC,OAAO,GAET,EAAKC,SAAU,EAZH,E,qDAed,WAGEC,KAAKD,SAAU,EAEfC,KAAKC,oB,kCAIP,WAGED,KAAKD,SAAU,I,oEAIjB,iCAAAG,EAAA,yDAEOF,KAAKD,QAFZ,iDAIEI,IAAcC,SACXC,MAAK,SAACC,GAGL,EAAKC,SAAS,CACZZ,UAAWW,EAAO,SAASE,KAAI,SAAAC,GAC7B,MAAO,CACLf,IAAKe,EAAKC,KACR,oCACE,6BAAMD,EAAKf,KACX,kBAAC,IAAD,CAAOiB,UAAW,EAAGC,MAAM,WAA3B,WAEDH,EAAKf,IACRmB,MAAOJ,EAAKI,MACZC,QAAQ,MAGZhB,OAAO,OArBf,gD,0EA4BA,WAAU,IAAD,OACP,OACE,iCACE,kBAAC,IAAD,CAAMiB,QAAQ,OAAOC,QAAQ,OAAOC,WAAW,SAC7C,kBAAC,IAAD,CAAMC,KAAM,EAAGC,WAAW,SAASJ,QAAQ,QACzC,kBAAC,IAAD,CAASK,KAAM,KAAf,gBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,WAAW,UAAUC,WAAYtC,IAAgBuC,QAAS,WAAK,EAAKhB,SAAS,CAAEV,YAAY,MAAnG,kBAGJ,kBAAC,IAAD,CAAMmB,QAAQ,OACZ,kBAAC,IAAD,CAASI,KAAM,KAAf,iBACA,kBAAC,IAAD,CAAWA,KAAM,IAAKR,MAAM,SAA5B,6CAIF,kBAAC,IAAD,KAEKZ,KAAKT,MAAMO,MACX,kBAAC,IAAD,CAAU0B,SAAQ,qBAAwBC,KAAMzB,KAAKT,MAAMC,UAAWkC,KAAM1B,KAAKT,MAAMI,YACxF,kBAAC,IAAD,OAGJ,kBAAC,IAAD,CACEgC,QAAS3B,KAAKT,MAAMM,WACpB+B,WAAW,EACXC,OAAO,UACPC,iBAAkB9B,KAAKT,MAAMwC,QAC7BC,UAAW,WACT,EAAKzB,SAAS,CAAEwB,SAAS,KAe3BE,gBAAiB,kBAAM,EAAK1B,SAAS,CAAEV,YAAY,EAAOkC,SAAS,KACnEG,aAAa,QAEb,kBAAC,IAAD,CAASd,KAAM,IAAKe,aAAc,GAAlC,gBACA,kBAAC,IAAD,CAAMC,UAAU,sBAAsBC,SAAUrC,KAAKsC,aAAcC,KAAMvC,KAAKT,MAAMK,iB,GA9G3D4C,aAqHpBlD","file":"static/js/13.9cea72eb.chunk.js","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M15.52 2.77c.3-.29.48-.7.48-1.15C16 .73 15.27 0 14.38 0c-.45 0-.85.18-1.15.48l-1.34 1.34 2.3 2.3 1.33-1.35zM7.4 10.9l6.21-6.21-2.3-2.3L5.1 8.6l2.3 2.3zM14 14H2V2h6.34l2-2H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5.66l-2 2V14zM3 13l3.58-1.29-2.29-2.27L3 13z'\n]\nconst svgPaths20 = [\n  'M9.41 13.41l7.65-7.65-2.83-2.83-7.65 7.65 2.83 2.83zm10-10c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.64-1.66zM18 18H2V2h8.93l2-2H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7.07l-2 2V18zM4 16l4.41-1.59-2.81-2.79L4 16z'\n]\n\nexport const AnnotationIcon = memo(\n  forwardRef(function AnnotationIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"annotation\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { Component } from 'react'\nimport { Pane, Heading, Button, Badge, AnnotationIcon, Paragraph, Dialog } from 'evergreen-ui'\nimport TableCmp from '../../@components/TableCmp';\nimport ConfigService from '../../@services/Config';\nimport Busy from '../../@components/Busy';\nimport Form from '../../@components/Form';\n\nclass PageToolsEnvironment extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      tableCols: [\n        {label:'Key', key: 'key'},\n        {label:'Value', key: 'value'}\n      ],\n      tableData: [],\n      formData: {},\n      isAddShown: false,\n      ready: false\n    }\n    this.mounted = false\n  }\n  \n  componentDidMount()\n  {\n    \n    this.mounted = true\n    \n    this.updateTableData();\n\n  }\n\n  componentWillUnmount()\n  {\n    \n    this.mounted = false\n\n  }\n\n  async updateTableData() {\n    \n    if (!this.mounted) return;\n    \n    ConfigService.getEnv()\n      .then((values) => {\n\n        //\n        this.setState({\n          tableData: values['@keys'].map(item => {\n            return {\n              key: item.root?(\n                <>\n                  <div>{item.key}</div>\n                  <Badge marginTop={1} color=\"neutral\">global</Badge>\n                </>\n              ):(item.key),\n              value: item.value,\n              shared: false\n            }\n          }),\n          ready: true\n        })\n\n      })\n    \n  }\n\n  render() {\n    return (\n      <article>\n        <Pane display=\"flex\" padding=\".5em\" background=\"tint2\">\n          <Pane flex={1} alignItems=\"center\" display=\"flex\">\n            <Heading size={600}>Environment</Heading>\n          </Pane>\n          <Pane>\n            <Button appearance=\"minimal\" iconBefore={AnnotationIcon} onClick={()=>{this.setState({ isAddShown: true })}}>Add Variable</Button>\n          </Pane>\n        </Pane>\n        <Pane padding=\"1em\">\n          <Heading size={400}>What is this?</Heading>\n          <Paragraph size={400} color=\"muted\">\n            Setup/manage environment variables here.\n          </Paragraph>\n        </Pane>\n        <Pane>\n          {\n            (this.state.ready) ?\n            (<TableCmp emptyMsg={`Nothing to display`} cols={this.state.tableCols} rows={this.state.tableData} />) :\n            <Busy/>\n          }\n        </Pane>\n        <Dialog\n          isShown={this.state.isAddShown}\n          hasHeader={false}\n          intent=\"success\"\n          isConfirmLoading={this.state.addBusy}\n          onConfirm={() => {\n            this.setState({ addBusy: true })\n            // ConfigService.addSite(this.state.formData)\n            //   .then(res => {\n\n            //     this.getSites(res.key)\n            //       .then(()=>{\n\n            //         this.setState({ isAddShown: false, addBusy: false })\n            //         toaster.success('Added Successfully', { description: 'Connect your source to a destination to receive data.' })\n            //         window.location.href=`/${res.key}/`\n\n            //       })\n                  \n            //   })\n          }}\n          onCloseComplete={() => this.setState({ isAddShown: false, addBusy: false })}\n          confirmLabel=\"Save\"\n        >\n          <Heading size={600} marginBottom={5}>Add Variable</Heading>\n          <Form className=\"split-content__form\" onChange={this.handleChange} data={this.state.formData}/>\n        </Dialog>\n      </article>\n    )\n  }\n}\n\nexport default PageToolsEnvironment;"],"sourceRoot":""}