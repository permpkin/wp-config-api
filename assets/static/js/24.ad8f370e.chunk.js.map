{"version":3,"sources":["@views/Config/Overview.js"],"names":["PageConfigOverview","props","state","menuStruct","isShown","configString","JSON","stringify","ConfigService","config","this","setState","display","padding","background","flex","alignItems","size","to","appearance","iconBefore","AddIcon","EditIcon","onClick","e","preventDefault","flexWrap","map","item","index","key","height","justifyContent","margin","elevation","border","label","onCloseComplete","codeString","Component"],"mappings":"0PAKMA,E,kDACJ,WAAYC,GACX,IAAD,8BACE,cAAMA,IACDC,MAAQ,CACXC,WAAU,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAOE,WACnBC,SAAS,EACTC,aAAcC,KAAKC,UAAUC,IAAcC,OAAQ,KAAM,IAL7D,E,qDAQA,WAEOC,KAAKR,MAAMG,cACdK,KAAKC,SAAS,CACZN,aAAcC,KAAKC,UAAUC,IAAcC,OAAQ,KAAM,O,oBAG/D,WAAU,IAAD,OACP,OACE,iCACE,kBAAC,IAAD,CAAMG,QAAQ,OAAOC,QAAQ,OAAOC,WAAW,SAC7C,kBAAC,IAAD,CAAMC,KAAM,EAAGC,WAAW,SAASJ,QAAQ,QACzC,kBAAC,IAAD,CAASK,KAAM,KAAf,oBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASC,GAAE,cAAgB,kBAAC,IAAD,CAAQC,WAAW,UAAUC,WAAYC,KAAzC,iBACzB,kBAAC,IAAD,CAAQF,WAAW,UAAUC,WAAYE,IAAUC,QAAS,SAACC,GAAQA,EAAEC,iBAAkB,EAAKd,SAAS,CAAEP,SAAS,EAAMC,aAAcC,KAAKC,UAAUC,IAAcC,QAAQ,EAAM,OAAjL,eAGN,kBAAC,IAAD,CAAMG,QAAQ,OAAOc,SAAS,QAE1BhB,KAAKR,MAAMC,WAAWwB,KAAI,SAACC,EAAMC,GAAP,OACxB,kBAAC,IAAD,CAAMC,IAAKD,EAAOd,KAAK,sBAAsBgB,OAAQ,IAAKnB,QAAQ,OAAOoB,eAAe,SAAShB,WAAW,SAASiB,OAAO,MAAMC,UAAW,EAAGC,OAAO,WACrJ,kBAAC,IAAD,CAASjB,GAAE,kBAAaU,EAAKE,MAC3B,kBAAC,IAAD,CAASb,KAAM,KAAMW,EAAKQ,aAMpC,kBAAC,IAAD,CACEhC,QAASM,KAAKR,MAAME,QACpBiC,gBAAiB,kBAAM,EAAK1B,SAAS,CAAEP,SAAS,MAEhD,kBAAC,IAAD,CAAMkC,WAAY5B,KAAKR,MAAMG,qB,GA5CNkC,aAmDlBvC","file":"static/js/24.ad8f370e.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom';\nimport { Pane, Heading, Button, AddIcon, EditIcon, Code, SideSheet } from 'evergreen-ui'\nimport ConfigService from '../../@services/Config';\n\nclass PageConfigOverview extends Component {\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      menuStruct: props?.menuStruct,\n      isShown: false,\n      configString: JSON.stringify(ConfigService.config, null, 4)\n    }\n  }\n  componentDidMount()\n  {\n    if (!this.state.configString)\n      this.setState({\n        configString: JSON.stringify(ConfigService.config, null, 4)\n      })\n  }\n  render() {\n    return (\n      <article>\n        <Pane display=\"flex\" padding=\".5em\" background=\"tint2\">\n          <Pane flex={1} alignItems=\"center\" display=\"flex\">\n            <Heading size={600}>Config Overview</Heading>\n          </Pane>\n          <Pane>\n            <NavLink to={`/templates`}><Button appearance=\"minimal\" iconBefore={AddIcon}>Add Template</Button></NavLink>\n              <Button appearance=\"minimal\" iconBefore={EditIcon} onClick={(e) => { e.preventDefault(); this.setState({ isShown: true, configString: JSON.stringify(ConfigService.config, true, 4) }) }}>Edit Code</Button>\n          </Pane>\n        </Pane>\n        <Pane display=\"flex\" flexWrap=\"wrap\">\n          {\n            this.state.menuStruct.map((item, index) => (\n              <Pane key={index} flex=\"0 0 calc(25% - 2em)\" height={128} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" margin=\"1em\" elevation={1} border=\"default\">\n                <NavLink to={`/config/${item.key}`}>\n                  <Heading size={500}>{item.label}</Heading>\n                </NavLink>\n              </Pane>\n            ))\n          }\n        </Pane>\n        <SideSheet\n          isShown={this.state.isShown}\n          onCloseComplete={() => this.setState({ isShown: false })}\n        >\n          <Code codeString={this.state.configString} />\n        </SideSheet>\n      </article>\n    )\n  }\n}\n\nexport default PageConfigOverview;"],"sourceRoot":""}