{"version":3,"sources":["../../../../src/icons/generated/EditIcon.js","../../../../src/icons/generated/AddIcon.js","../../../../src/icons/generated/CrossIcon.js","../../../../src/side-sheet/src/SheetClose.js","../../../../src/side-sheet/src/SideSheet.js","../../../src/lib/prevent-body-scroll.js","../../../../src/overlay/src/Overlay.js","../../../../src/typography/src/Code.js"],"names":["svgPaths16","svgPaths20","EditIcon","memo","forwardRef","props","ref","name","AddIcon","CrossIcon","animationEasing","sharedStyles","padding","borderRadius","position","cursor","backgroundColor","transition","withAnimations","animateIn","animateOut","animation","sheetCloseStyles","Position","left","marginLeft","marginTop","transform","from","to","marginRight","right","top","bottom","marginBottom","sheetCloseClassNameCache","getSheetCloseClassName","css","SheetClose","this","width","height","display","alignItems","justifyContent","className","color","PureComponent","Box","propTypes","isClosing","PropTypes","bool","isRequired","paneProps","maxWidth","maxHeight","subpaneProps","animationStylesClass","noop","SideSheet","isShown","children","containerProps","onOpenComplete","onCloseComplete","onBeforeClose","shouldCloseOnOverlayClick","shouldCloseOnEscapePress","preventBodyScrolling","shouldCloseOnClick","onExited","onEntered","state","close","data-state","onClick","elevation","overflowY","emptyProps","fadeInAnimation","opacity","fadeOutAnimation","Overlay","onExit","onExiting","onEnter","onEntering","theme","useTheme","useState","previousActiveElement","setPreviousActiveElement","status","setStatus","containerRef","useRef","useEffect","safeInvoke","onEsc","event","document","bringFocusInsideOverlay","bringFocusBackToTarget","handleBodyScroll","requestAnimationFrame","autofocusElement","wrapperElement","buttonElement","isFocusInsideModal","preventScroll","previousOverflow","scrollBarWidth","previousPaddingRight","Math","preventBodyScroll","handleEnter","node","isAppearing","handleEntering","handleEntered","handleExit","handleExiting","handleExited","handleBackdropClick","value","StackingOrder","OVERLAY","zIndex","appear","unmountOnExit","timeout","in","cx","content","func","Code","appearance","restProps","themedClassName","themeProps","is","fontFamily","Text","string"],"mappings":"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","file":"static/js/16.db2fcb80.chunk.js","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M3.25 10.26l2.47 2.47 6.69-6.69-2.46-2.48-6.7 6.7zM.99 14.99l3.86-1.39-2.46-2.44-1.4 3.83zm12.25-14c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.44-1.44c.32-.32.51-.75.51-1.24.01-.95-.77-1.74-1.74-1.74z'\n]\nconst svgPaths20 = [\n  'M4.59 12.59l2.83 2.83 7.65-7.65-2.83-2.83-7.65 7.65zM2 18l4.41-1.59-2.81-2.79L2 18zM16 2c-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.65-1.65A2.006 2.006 0 0016 2z'\n]\n\nexport const EditIcon = memo(\n  forwardRef(function EditIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"edit\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M10.99 6.99h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1zm-3-7c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z'\n]\nconst svgPaths20 = [\n  'M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm5-9h-4V5c0-.55-.45-1-1-1s-1 .45-1 1v4H5c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1v-4h4c.55 0 1-.45 1-1s-.45-1-1-1z'\n]\n\nexport const AddIcon = memo(\n  forwardRef(function AddIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"add\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M9.41 8l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L8 6.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L6.59 8 3.3 11.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71L8 9.41l3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L9.41 8z'\n]\nconst svgPaths20 = [\n  'M11.41 10l4.29-4.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L10 8.59l-4.29-4.3a1.003 1.003 0 00-1.42 1.42L8.59 10 4.3 14.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l4.29-4.3 4.29 4.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10z'\n]\n\nexport const CrossIcon = memo(\n  forwardRef(function CrossIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"cross\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport Box from 'ui-box'\nimport { css } from 'glamor'\nimport { CrossIcon } from '../../icons'\nimport { Position } from '../../constants'\n\nconst animationEasing = {\n  deceleration: `cubic-bezier(0.0, 0.0, 0.2, 1)`,\n  acceleration: `cubic-bezier(0.4, 0.0, 1, 1)`\n}\n\nconst ANIMATION_DURATION = 240\n\nconst sharedStyles = {\n  padding: 4,\n  borderRadius: 9999,\n  position: 'absolute',\n  cursor: 'pointer',\n  backgroundColor: `rgba(255, 255, 255, 0.4)`,\n  transition: `background-color 120ms`,\n  '&:hover': {\n    backgroundColor: `rgba(255, 255, 255, 0.6)`\n  },\n  '&:active': {\n    backgroundColor: `rgba(255, 255, 255, 0.4)`\n  }\n}\n\nconst withAnimations = (animateIn, animateOut) => {\n  return {\n    '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n      animation: `${animateIn} ${ANIMATION_DURATION}ms ${animationEasing.deceleration} both`\n    },\n    '&[data-state=\"exiting\"]': {\n      animation: `${animateOut} ${ANIMATION_DURATION}ms ${animationEasing.acceleration} both`\n    }\n  }\n}\n\nconst sheetCloseStyles = {\n  [Position.RIGHT]: {\n    left: 0,\n    marginLeft: -12,\n    marginTop: 12,\n    transform: `translateX(-100%)`,\n    ...withAnimations(\n      css.keyframes('rotate360InAnimation', {\n        from: { transform: `translateX(100%) rotate(0deg)` },\n        to: { transform: `translateX(-100%) rotate(-360deg)` }\n      }),\n      css.keyframes('rotate360OutAnimation', {\n        from: { transform: `translateX(-100%) rotate(0deg)` },\n        to: { transform: `translateX(100%) rotate(360deg)` }\n      })\n    )\n  },\n  [Position.LEFT]: {\n    marginRight: -12,\n    right: 0,\n    marginTop: 12,\n    transform: `translateX(100%)`,\n    ...withAnimations(\n      css.keyframes('leftRotate360InAnimation', {\n        from: { transform: `translateX(-100%) rotate(0deg)` },\n        to: { transform: `translateX(100%), rotate(360deg)` }\n      }),\n      css.keyframes('leftRotate360OutAnimation', {\n        from: { transform: `translateX(100%) rotate(0deg)` },\n        to: { transform: `translateX(-100%), rotate(360deg)` }\n      })\n    )\n  },\n  [Position.TOP]: {\n    right: 0,\n    marginRight: 12,\n    top: '100%',\n    marginTop: 12,\n    transform: `translateY(0)`,\n    ...withAnimations(\n      css.keyframes('topRotate360InAnimation', {\n        from: { transform: `translateY(-200%) rotate(0deg)` },\n        to: { transform: `translateY(0%), rotate(360deg)` }\n      }),\n      css.keyframes('topRotate360OutAnimation', {\n        from: { transform: `translateY(0%) rotate(0deg)` },\n        to: { transform: `translateY(-200%), rotate(360deg)` }\n      })\n    )\n  },\n  [Position.BOTTOM]: {\n    right: 0,\n    marginRight: 12,\n    bottom: '100%',\n    marginBottom: 12,\n    transform: `translateY(0)`,\n    ...withAnimations(\n      css.keyframes('bottomRotate360InAnimation', {\n        from: { transform: `translateY(200%) rotate(0deg)` },\n        to: { transform: `translateY(0%), rotate(360deg)` }\n      }),\n      css.keyframes('bottomRotate360OutAnimation', {\n        from: { transform: `translateY(0%) rotate(0deg)` },\n        to: { transform: `translateY(200%), rotate(360deg)` }\n      })\n    )\n  }\n}\n\nconst sheetCloseClassNameCache = {}\n\nconst getSheetCloseClassName = position => {\n  if (!sheetCloseClassNameCache[position]) {\n    sheetCloseClassNameCache[position] = css({\n      ...sheetCloseStyles[position],\n      ...sharedStyles\n    }).toString()\n  }\n\n  return sheetCloseClassNameCache[position]\n}\n\nexport default class SheetClose extends PureComponent {\n  static propTypes = {\n    ...Box.propTypes,\n    isClosing: PropTypes.bool,\n    position: PropTypes.oneOf([\n      Position.LEFT,\n      Position.RIGHT,\n      Position.TOP,\n      Position.BOTTOM\n    ]).isRequired\n  }\n\n  render() {\n    const { isClosing, position, ...props } = this.props\n    return (\n      <Box\n        width={32}\n        height={32}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        className={getSheetCloseClassName(position)}\n        {...props}\n      >\n        <CrossIcon color=\"#fff\" />\n      </Box>\n    )\n  }\n}\n","import React, { memo } from 'react'\nimport { css } from 'glamor'\nimport PropTypes from 'prop-types'\nimport { Pane } from '../../layers'\nimport { Overlay } from '../../overlay'\nimport { Position } from '../../constants'\nimport SheetClose from './SheetClose'\n\nconst paneProps = {\n  [Position.LEFT]: {\n    height: '100vh',\n    maxWidth: '100vw',\n    position: 'absolute',\n    left: 0,\n    right: 'auto'\n  },\n  [Position.RIGHT]: {\n    height: '100vh',\n    maxWidth: '100vw',\n    position: 'absolute',\n    right: 0,\n    left: 'auto'\n  },\n  [Position.TOP]: {\n    width: '100vw',\n    position: 'absolute',\n    maxHeight: '100vh',\n    top: 0,\n    bottom: 'auto'\n  },\n  [Position.BOTTOM]: {\n    width: '100vw',\n    maxHeight: '100vh',\n    position: 'absolute',\n    bottom: 0,\n    top: 'auto'\n  }\n}\n\nconst subpaneProps = {\n  [Position.LEFT]: {\n    height: '100vh'\n  },\n  [Position.RIGHT]: {\n    height: '100vh'\n  },\n  [Position.TOP]: {\n    width: '100vw'\n  },\n  [Position.BOTTOM]: {\n    width: '100vw'\n  }\n}\n\nconst animationEasing = {\n  deceleration: `cubic-bezier(0.0, 0.0, 0.2, 1)`,\n  acceleration: `cubic-bezier(0.4, 0.0, 1, 1)`\n}\n\nconst ANIMATION_DURATION = 240\n\nconst withAnimations = (animateIn, animateOut) => {\n  return {\n    '&[data-state=\"entering\"], &[data-state=\"entered\"]': {\n      animation: `${animateIn} ${ANIMATION_DURATION}ms ${animationEasing.deceleration} both`\n    },\n    '&[data-state=\"exiting\"]': {\n      animation: `${animateOut} ${ANIMATION_DURATION}ms ${animationEasing.acceleration} both`\n    }\n  }\n}\n\nconst animationStylesClass = {\n  [Position.LEFT]: {\n    transform: `translateX(-100%)`,\n    ...withAnimations(\n      css.keyframes('anchoredLeftSlideInAnimation', {\n        from: { transform: `translateX(-100%)` },\n        to: { transform: `translateX(0)` }\n      }),\n      css.keyframes('anchoredLeftSlideOutAnimation', {\n        from: { transform: `translateX(0)` },\n        to: { transform: `translateX(-100%)` }\n      })\n    )\n  },\n  [Position.RIGHT]: {\n    transform: `translateX(100%)`,\n    ...withAnimations(\n      css.keyframes('anchoredRightSlideInAnimation', {\n        from: { transform: `translateX(100%)` },\n        to: { transform: `translateX(0)` }\n      }),\n      css.keyframes('anchoredRightSlideOutAnimation', {\n        from: { transform: `translateX(0)` },\n        to: { transform: `translateX(100%)` }\n      })\n    )\n  },\n  [Position.TOP]: {\n    transform: `translateY(-100%)`,\n    ...withAnimations(\n      css.keyframes('anchoredTopSlideInAnimation', {\n        from: { transform: `translateY(-100%)` },\n        to: { transform: `translateY(0)` }\n      }),\n      css.keyframes('anchoredTopSlideOutAnimation', {\n        from: { transform: `translateY(0)` },\n        to: { transform: `translateY(-100%)` }\n      })\n    )\n  },\n  [Position.BOTTOM]: {\n    transform: `translateY(100%)`,\n    ...withAnimations(\n      css.keyframes('anchoredBottomSlideInAnimation', {\n        from: { transform: `translateY(100%)` },\n        to: { transform: `translateY(0)` }\n      }),\n      css.keyframes('anchoredBottomSlideOutAnimation', {\n        from: { transform: `translateY(0)` },\n        to: { transform: `translateY(100%)` }\n      })\n    )\n  }\n}\n\nconst noop = () => {}\n\nconst SideSheet = memo(function SideSheet(props) {\n  const {\n    width = 620,\n    isShown,\n    children,\n    containerProps,\n    onOpenComplete = noop,\n    onCloseComplete = noop,\n    onBeforeClose,\n    shouldCloseOnOverlayClick = true,\n    shouldCloseOnEscapePress = true,\n    position = Position.RIGHT,\n    preventBodyScrolling\n  } = props\n\n  return (\n    <Overlay\n      isShown={isShown}\n      shouldCloseOnClick={shouldCloseOnOverlayClick}\n      shouldCloseOnEscapePress={shouldCloseOnEscapePress}\n      onBeforeClose={onBeforeClose}\n      onExited={onCloseComplete}\n      onEntered={onOpenComplete}\n      preventBodyScrolling={preventBodyScrolling}\n    >\n      {({ state, close }) => (\n        <Pane\n          width={width}\n          {...paneProps[position]}\n          css={animationStylesClass[position]}\n          data-state={state}\n        >\n          <SheetClose\n            position={position}\n            data-state={state}\n            isClosing={false}\n            onClick={close}\n          />\n          <Pane\n            elevation={4}\n            backgroundColor=\"white\"\n            overflowY=\"auto\"\n            maxHeight=\"100vh\"\n            data-state={state}\n            width={width}\n            {...subpaneProps[position]}\n            {...containerProps}\n          >\n            {typeof children === 'function' ? children({ close }) : children}\n          </Pane>\n        </Pane>\n      )}\n    </Overlay>\n  )\n})\n\nSideSheet.propTypes = {\n  /**\n   * Children can be a string, node or a function accepting `({ close })`.\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n  /**\n   * When true, the Side Sheet is shown.\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * Function that will be called when the exit transition is complete.\n   */\n  onCloseComplete: PropTypes.func,\n\n  /**\n   * Function that will be called when the enter transition is complete.\n   */\n  onOpenComplete: PropTypes.func,\n\n  /**\n   * Function called when overlay is about to close.\n   * Return `false` to prevent the sheet from closing.\n   * type: `Function -> Boolean`\n   */\n  onBeforeClose: PropTypes.func,\n\n  /**\n   * Boolean indicating if clicking the overlay should close the overlay.\n   */\n  shouldCloseOnOverlayClick: PropTypes.bool,\n\n  /**\n   * Boolean indicating if pressing the esc key should close the overlay.\n   */\n  shouldCloseOnEscapePress: PropTypes.bool,\n\n  /**\n   * Width of the SideSheet.\n   */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Properties to pass through the SideSheet container Pane.\n   */\n  containerProps: PropTypes.object,\n\n  /**\n   * Positions the sheet to the top, left, right, or bottom of the screen.\n   */\n  position: PropTypes.oneOf([\n    Position.TOP,\n    Position.BOTTOM,\n    Position.LEFT,\n    Position.RIGHT\n  ]),\n\n  /**\n   * Whether or not to prevent scrolling in the outer body\n   */\n  preventBodyScrolling: PropTypes.bool\n}\n\nexport default SideSheet\n","let previousOverflow\nlet previousPaddingRight\n\n/**\n * Toggle the body scroll / overflow and additional styling\n * necessary to preserve scroll position and body width (scrollbar replacement)\n *\n * @param {boolean} preventScroll - whether or not to prevent body scrolling\n */\nexport default function preventBodyScroll(preventScroll) {\n  /** Get the width before toggling the style so we can calculate the scrollbar width for a smooth, jankless style change */\n  const { width } = document.body.getBoundingClientRect()\n\n  /** Apply or remove overflow style */\n  if (preventScroll) {\n    previousOverflow = document.body.style.overflow\n    document.body.style.overflow = 'hidden'\n  } else {\n    document.body.style.overflow = previousOverflow || ''\n  }\n\n  /** Get the _new width_ of the body (this will tell us the scrollbar width) */\n  const newWidth = document.body.getBoundingClientRect().width\n  const scrollBarWidth = newWidth - width\n\n  /** If there's a diff due to scrollbars, then account for it with padding */\n  if (preventScroll) {\n    previousPaddingRight = document.body.style.paddingRight\n    document.body.style.paddingRight = Math.max(0, scrollBarWidth || 0) + 'px'\n  } else {\n    document.body.style.paddingRight = previousPaddingRight || ''\n  }\n}\n","import React, { memo, useState, useEffect, useRef } from 'react'\nimport cx from 'classnames'\nimport { css } from 'glamor'\nimport PropTypes from 'prop-types'\nimport { Transition } from 'react-transition-group'\nimport Box from 'ui-box'\nimport { Portal } from '../../portal'\nimport { Stack } from '../../stack'\nimport { StackingOrder } from '../../constants'\nimport { useTheme } from '../../theme'\nimport safeInvoke from '../../lib/safe-invoke'\nimport preventBodyScroll from '../../lib/prevent-body-scroll'\n\nconst noop = () => {}\nconst emptyProps = {}\n\nconst animationEasing = {\n  standard: `cubic-bezier(0.4, 0.0, 0.2, 1)`,\n  deceleration: `cubic-bezier(0.0, 0.0, 0.2, 1)`,\n  acceleration: `cubic-bezier(0.4, 0.0, 1, 1)`,\n  sharp: `cubic-bezier(0.4, 0.0, 0.6, 1)`,\n  spring: `cubic-bezier(0.175, 0.885, 0.320, 1.175)`\n}\n\nconst ANIMATION_DURATION = 240\n\nconst fadeInAnimation = css.keyframes('fadeInAnimation', {\n  from: {\n    opacity: 0\n  },\n  to: {\n    opacity: 1\n  }\n})\n\nconst fadeOutAnimation = css.keyframes('fadeOutAnimation', {\n  from: {\n    opacity: 1\n  },\n  to: {\n    opacity: 0\n  }\n})\n\nconst animationStyles = backgroundColor => ({\n  '&::before': {\n    backgroundColor,\n    left: 0,\n    top: 0,\n    position: 'fixed',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    content: '\" \"'\n  },\n  '&[data-state=\"entering\"]::before, &[data-state=\"entered\"]::before': {\n    animation: `${fadeInAnimation} ${ANIMATION_DURATION}ms ${animationEasing.deceleration} both`\n  },\n  '&[data-state=\"exiting\"]::before, &[data-state=\"exited\"]::before': {\n    animation: `${fadeOutAnimation} ${ANIMATION_DURATION}ms ${animationEasing.acceleration} both`\n  }\n})\n\n/**\n * Overlay is essentially a wrapper around react-transition-group/Transition\n */\nconst Overlay = memo(function Overlay({\n  children,\n  containerProps = emptyProps,\n  preventBodyScrolling = false,\n  shouldCloseOnClick = true,\n  shouldCloseOnEscapePress = true,\n  onBeforeClose,\n  onExit = noop,\n  onExiting = noop,\n  onExited = noop,\n  onEnter = noop,\n  onEntering = noop,\n  onEntered = noop,\n  isShown,\n  ...props\n}) {\n  const theme = useTheme()\n  const [previousActiveElement, setPreviousActiveElement] = useState(null)\n  const [status, setStatus] = useState(isShown ? 'entering' : 'exited')\n  const containerRef = useRef()\n\n  useEffect(() => {\n    if (isShown) {\n      setStatus('entering')\n    }\n  }, [isShown])\n\n  const close = () => {\n    const shouldClose = safeInvoke(props.onBeforeClose)\n    if (shouldClose !== false) {\n      setStatus('exiting')\n    }\n  }\n\n  const onEsc = event => {\n    if (event.key === 'Escape' && shouldCloseOnEscapePress) {\n      close()\n    }\n  }\n\n  useEffect(() => {\n    if (status === 'entered') {\n      setPreviousActiveElement(document.activeElement)\n      bringFocusInsideOverlay()\n    }\n\n    if (status === 'entering') {\n      document.body.addEventListener('keydown', onEsc, false)\n    }\n\n    if (status === 'exiting') {\n      document.body.removeEventListener('keydown', onEsc, false)\n      bringFocusBackToTarget()\n    }\n  }, [status])\n\n  // ComponentWillUnmount\n  useEffect(\n    () => () => {\n      handleBodyScroll(false)\n      document.body.removeEventListener('keydown', onEsc, false)\n    },\n    []\n  )\n\n  /**\n   * Methods borrowed from BlueprintJS\n   * https://github.com/palantir/blueprint/blob/release/2.0.0/packages/core/src/components/overlay/overlay.tsx\n   */\n  const bringFocusInsideOverlay = () => {\n    // Always delay focus manipulation to just before repaint to prevent scroll jumping\n    return requestAnimationFrame(() => {\n      // Container ref may be undefined between component mounting and Portal rendering\n      // activeElement may be undefined in some rare cases in IE\n\n      if (\n        containerRef.current == null || // eslint-disable-line eqeqeq, no-eq-null\n        document.activeElement == null || // eslint-disable-line eqeqeq, no-eq-null\n        !isShown\n      ) {\n        return\n      }\n\n      const isFocusOutsideModal = !containerRef.current.contains(\n        document.activeElement\n      )\n      if (isFocusOutsideModal) {\n        // Element marked autofocus has higher priority than the other clowns\n        const autofocusElement = containerRef.current.querySelector(\n          '[autofocus]'\n        )\n        const wrapperElement = containerRef.current.querySelector('[tabindex]')\n        const buttonElement = containerRef.current.querySelector('button')\n\n        if (autofocusElement) {\n          autofocusElement.focus()\n        } else if (wrapperElement) {\n          wrapperElement.focus()\n        } else if (buttonElement) {\n          buttonElement.focus()\n        }\n      }\n    })\n  }\n\n  const bringFocusBackToTarget = () => {\n    return requestAnimationFrame(() => {\n      if (\n        previousActiveElement == null || // eslint-disable-line eqeqeq, no-eq-null\n        containerRef.current == null || // eslint-disable-line eqeqeq, no-eq-null\n        document.activeElement == null // eslint-disable-line eqeqeq, no-eq-null\n      ) {\n        return\n      }\n\n      // Bring back focus on the target.\n      const isFocusInsideModal = containerRef.current.contains(\n        document.activeElement\n      )\n      if (document.activeElement === document.body || isFocusInsideModal) {\n        previousActiveElement.focus()\n      }\n    })\n  }\n\n  const handleBodyScroll = preventScroll => {\n    if (preventBodyScrolling) {\n      preventBodyScroll(preventScroll)\n    }\n  }\n\n  const handleEnter = (node, isAppearing) => {\n    handleBodyScroll(true)\n    safeInvoke(onEnter, node, isAppearing)\n  }\n\n  const handleEntering = (node, isAppearing) => {\n    setStatus('entering')\n    safeInvoke(onEntering, node, isAppearing)\n  }\n\n  const handleEntered = (node, isAppearing) => {\n    setStatus('entered')\n    safeInvoke(onEntered, node, isAppearing)\n  }\n\n  const handleExit = node => {\n    handleBodyScroll(false)\n    safeInvoke(onExit, node)\n  }\n\n  const handleExiting = node => {\n    setStatus('exiting')\n    safeInvoke(onExiting, node)\n  }\n\n  const handleExited = node => {\n    setStatus('exited')\n    safeInvoke(onExited, node)\n  }\n\n  const handleBackdropClick = event => {\n    if (event.target !== event.currentTarget || !shouldCloseOnClick) {\n      return\n    }\n\n    close()\n  }\n\n  if (status === 'exited') {\n    return null\n  }\n\n  return (\n    <Stack value={StackingOrder.OVERLAY}>\n      {zIndex => (\n        <Portal>\n          <Transition\n            appear\n            unmountOnExit\n            timeout={ANIMATION_DURATION}\n            in={isShown && status !== 'exiting'}\n            onExit={handleExit}\n            onExiting={handleExiting}\n            onExited={handleExited}\n            onEnter={handleEnter}\n            onEntering={handleEntering}\n            onEntered={handleEntered}\n          >\n            {state => (\n              <Box\n                onClick={handleBackdropClick}\n                ref={containerRef}\n                position=\"fixed\"\n                top={0}\n                left={0}\n                right={0}\n                bottom={0}\n                zIndex={zIndex}\n                data-state={state}\n                {...containerProps}\n                className={cx(\n                  containerProps.className,\n                  css(animationStyles(theme.overlayBackgroundColor)).toString()\n                )}\n              >\n                {typeof children === 'function'\n                  ? children({ state, close })\n                  : children}\n              </Box>\n            )}\n          </Transition>\n        </Portal>\n      )}\n    </Stack>\n  )\n})\n\nOverlay.propTypes = {\n  /**\n   * Children can be a node or a function accepting `close: func`\n   * and `state: ENTERING | ENTERED | EXITING | EXITED`.\n   */\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states.\n   */\n  isShown: PropTypes.bool,\n\n  /**\n   * Props to be passed through on the inner Box.\n   */\n  containerProps: PropTypes.object,\n\n  /**\n   * Whether or not to prevent body scrolling outside the context of the overlay\n   */\n  preventBodyScrolling: PropTypes.bool,\n\n  /**\n   * Boolean indicating if clicking the overlay should close the overlay.\n   */\n  shouldCloseOnClick: PropTypes.bool,\n\n  /**\n   * Boolean indicating if pressing the esc key should close the overlay.\n   */\n  shouldCloseOnEscapePress: PropTypes.bool,\n\n  /**\n   * Function called when overlay is about to close.\n   * Return `false` to prevent the sheet from closing.\n   * type: `Function -> Boolean`\n   */\n  onBeforeClose: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   * type: `Function(node: HtmlElement) -> void`\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   * type: `Function(node: HtmlElement) -> void`\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   * type: `Function(exitState: Any?, node: HtmlElement) -> void`\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied.\n   * An extra parameter isAppearing is supplied to indicate if the enter stage\n   * is occurring on the initial mount.\n   *\n   * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied.\n   * An extra parameter isAppearing is supplied to indicate if the enter stage\n   * is occurring on the initial mount.\n   *\n   * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied.\n   * An extra parameter isAppearing is supplied to indicate if the enter stage\n   * is occurring on the initial mount.\n   *\n   * type: `Function(node: HtmlElement, isAppearing: bool) -> void`\n   */\n  onEntered: PropTypes.func\n}\n\nexport default Overlay\n","import React, { forwardRef, memo } from 'react'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport { useTheme } from '../../theme'\nimport Text from './Text'\n\nconst Code = memo(\n  forwardRef(function Code(props, ref) {\n    const theme = useTheme()\n    const { className, appearance = 'default', ...restProps } = props\n\n    const {\n      className: themedClassName = '',\n      ...themeProps\n    } = theme.getCodeProps(appearance)\n\n    return (\n      <Text\n        is=\"code\"\n        ref={ref}\n        className={cx(className, themedClassName)}\n        fontFamily=\"mono\"\n        {...themeProps}\n        {...restProps}\n      />\n    )\n  })\n)\n\nCode.propTypes = {\n  ...Text.propTypes,\n\n  /**\n   * The appearance of the code.\n   */\n  appearance: PropTypes.oneOf(['default', 'minimal']),\n\n  /**\n   * Class name passed to the button.\n   * Only use if you know what you are doing.\n   */\n  className: PropTypes.string\n}\n\nexport default Code\n"],"sourceRoot":""}