{"version":3,"sources":["../../../../src/icons/generated/AnnotationIcon.js","../../../../src/search-input/src/SearchInput.js","@views/Templates/Search.js"],"names":["svgPaths16","svgPaths20","AnnotationIcon","memo","forwardRef","props","ref","name","SearchInput","theme","useTheme","appearance","disabled","height","restProps","splitBoxProps","matchedProps","remainingProps","width","iconSize","position","display","pointerEvents","justifyContent","alignItems","color","zIndex","StackingOrder","size","paddingLeft","type","TextInput","PageTemplatesSearch","state","tableCols","label","key","tableData","ready","mounted","this","updateTableData","a","ConfigService","getList","then","values","setState","map","item","value","description","Pane","padding","background","flex","Heading","marginRight","placeholder","Button","iconBefore","Paragraph","TableCmp","emptyMsg","cols","rows","Busy","Component"],"mappings":"oLAGMA,EAAa,CAAnB,kRAGMC,EAAa,CAAnB,iRAIaC,EAAiBC,eAC5BC,sBAAW,SAAwBC,EAAOC,GACxC,OACE,mCACEN,WADF,EAEEC,WAFF,EAGEK,IAHF,EAIEC,KAAK,cALT,S,0aCLJ,IAAMC,EAAcL,eAClBC,sBAAW,SAAqBC,EAAOC,GACrC,IAAMG,EAAQC,cAD4B,EAOtCL,EAPsC,WAGxCM,OAHwC,kBAIxCC,EAGEP,EAPsC,WAOtCA,EAPsC,OAKxCQ,OALwC,WAMrCC,EANqC,oDAQDC,wBARC,GAQlCC,EARkC,eAQpBC,EARoB,iBASlCC,EAAUF,EATwB,MAUpCG,EAAWV,sBAAjB,GAEA,OACE,mCACEW,SADF,WAEEC,QAFF,cAGER,OAHF,EAIEP,IAAKA,GAJP,GAOE,uBACEO,OADF,EAEEK,MAFF,EAGEI,cAHF,OAIEF,SAJF,WAKEC,QALF,OAMEE,eANF,SAOEC,WAAW,UAEX,uBACEC,MADF,UAEEC,OAAQC,YAFV,EAGEC,KAAMT,KAGV,mCACEN,OADF,EAEEgB,YAFF,EAGElB,WAHF,EAIEC,SAJF,EAKEM,MALF,EAMEY,KAAK,UA7BX,SAqCJtB,Y,yWAAAA,IAIKuB,IAJLvB,WAOA,Q,kDC1DMwB,E,kDAEJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,UAAW,CACT,CAACC,MAAM,OAAQC,IAAK,QACpB,CAACD,MAAM,cAAeC,IAAK,gBAE7BC,UAAW,GACXC,OAAO,GAET,EAAKC,SAAU,EAVH,E,qDAad,WAGEC,KAAKD,SAAU,EAEfC,KAAKC,oB,kCAIP,WAGED,KAAKD,SAAU,I,oEAIjB,iCAAAG,EAAA,yDAEOF,KAAKD,QAFZ,iDAIEI,IAAcC,QAAQ,aACnBC,MAAK,SAACC,GAGL,EAAKC,SAAS,CACZV,UAAWS,EAAOE,KAAI,SAAAC,GACpB,MAAO,CAAEC,MAAOD,EAAKC,MAAOpB,KAAMmB,EAAKnB,KAAMqB,YAAaF,EAAKE,gBAEjEb,OAAO,OAZf,gD,0EAmBA,WACE,OACE,iCACE,kBAACc,EAAA,EAAD,CAAM/B,QAAQ,OAAOgC,QAAQ,OAAOC,WAAW,SAC7C,kBAACF,EAAA,EAAD,CAAMG,KAAM,EAAG/B,WAAW,SAASH,QAAQ,QACzC,kBAACmC,EAAA,EAAD,CAAS5B,KAAM,KAAf,WAEF,kBAACwB,EAAA,EAAD,KACE,kBAAC,EAAD,CAAaK,YAAa,EAAGC,YAAY,qBACzC,kBAACC,EAAA,EAAD,CAAQhD,WAAW,UAAUiD,WAAY1D,KAAzC,kBAGJ,kBAACkD,EAAA,EAAD,CAAMC,QAAQ,OACZ,kBAACG,EAAA,EAAD,CAAS5B,KAAM,KAAf,iBACA,kBAACiC,EAAA,EAAD,CAAWjC,KAAM,IAAKH,MAAM,SAA5B,uPAIF,kBAAC2B,EAAA,EAAD,KAEKZ,KAAKP,MAAMK,MACX,kBAACwB,EAAA,EAAD,CAAUC,SAAQ,qBAAwBC,KAAMxB,KAAKP,MAAMC,UAAW+B,KAAMzB,KAAKP,MAAMI,YACxF,kBAAC6B,EAAA,EAAD,Y,GAxEsBC,aAgFnBnC","file":"static/js/0.2d4f3fe4.chunk.js","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M15.52 2.77c.3-.29.48-.7.48-1.15C16 .73 15.27 0 14.38 0c-.45 0-.85.18-1.15.48l-1.34 1.34 2.3 2.3 1.33-1.35zM7.4 10.9l6.21-6.21-2.3-2.3L5.1 8.6l2.3 2.3zM14 14H2V2h6.34l2-2H1C.45 0 0 .45 0 1v14c0 .55.45 1 1 1h14c.55 0 1-.45 1-1V5.66l-2 2V14zM3 13l3.58-1.29-2.29-2.27L3 13z'\n]\nconst svgPaths20 = [\n  'M9.41 13.41l7.65-7.65-2.83-2.83-7.65 7.65 2.83 2.83zm10-10c.37-.36.59-.86.59-1.41 0-1.1-.9-2-2-2-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.64-1.66zM18 18H2V2h8.93l2-2H1C.45 0 0 .45 0 1v18c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V7.07l-2 2V18zM4 16l4.41-1.59-2.81-2.79L4 16z'\n]\n\nexport const AnnotationIcon = memo(\n  forwardRef(function AnnotationIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"annotation\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { memo, forwardRef } from 'react'\nimport Box, { splitBoxProps } from 'ui-box'\nimport { SearchIcon } from '../../icons'\nimport { TextInput } from '../../text-input'\nimport { useTheme } from '../../theme'\nimport { StackingOrder } from '../../constants'\n\nconst SearchInput = memo(\n  forwardRef(function SearchInput(props, ref) {\n    const theme = useTheme()\n    const {\n      appearance = 'default',\n      disabled,\n      height = 32,\n      ...restProps\n    } = props\n    const { matchedProps, remainingProps } = splitBoxProps(restProps)\n    const { width } = matchedProps\n    const iconSize = theme.getIconSizeForInput(height)\n\n    return (\n      <Box\n        position=\"relative\"\n        display=\"inline-flex\"\n        height={height}\n        ref={ref}\n        {...matchedProps}\n      >\n        <Box\n          height={height}\n          width={height}\n          pointerEvents=\"none\"\n          position=\"absolute\"\n          display=\"flex\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <SearchIcon\n            color=\"default\"\n            zIndex={StackingOrder.FOCUSED + 1}\n            size={iconSize}\n          />\n        </Box>\n        <TextInput\n          height={height}\n          paddingLeft={height}\n          appearance={appearance}\n          disabled={disabled}\n          width={width}\n          type=\"search\"\n          {...remainingProps}\n        />\n      </Box>\n    )\n  })\n)\n\nSearchInput.propTypes = {\n  /**\n   * Composes the TextInput component as the base.\n   */\n  ...TextInput.propTypes\n}\n\nexport default SearchInput\n","import React, { Component } from 'react'\nimport { Pane, Heading, Button, AnnotationIcon, SearchInput, Paragraph } from 'evergreen-ui'\nimport TableCmp from '../../@components/TableCmp';\nimport ConfigService from '../../@services/Config';\nimport Busy from '../../@components/Busy';\n\nclass PageTemplatesSearch extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      tableCols: [\n        {label:'Type', key: 'type'},\n        {label:'Description', key: 'description'}\n      ],\n      tableData: [],\n      ready: false\n    }\n    this.mounted = false\n  }\n  \n  componentDidMount()\n  {\n    \n    this.mounted = true\n    \n    this.updateTableData();\n\n  }\n\n  componentWillUnmount()\n  {\n    \n    this.mounted = false\n\n  }\n\n  async updateTableData() {\n    \n    if (!this.mounted) return;\n    \n    ConfigService.getList('templates')\n      .then((values) => {\n\n        //\n        this.setState({\n          tableData: values.map(item => {\n            return { value: item.value, type: item.type, description: item.description }\n          }),\n          ready: true\n        })\n\n      })\n    \n  }\n\n  render() {\n    return (\n      <article>\n        <Pane display=\"flex\" padding=\".5em\" background=\"tint2\">\n          <Pane flex={1} alignItems=\"center\" display=\"flex\">\n            <Heading size={600}>Search</Heading>\n          </Pane>\n          <Pane>\n            <SearchInput marginRight={5} placeholder=\"Search Templates\" />\n            <Button appearance=\"minimal\" iconBefore={AnnotationIcon}>Add Template</Button>\n          </Pane>\n        </Pane>\n        <Pane padding=\"1em\">\n          <Heading size={400}>What is this?</Heading>\n          <Paragraph size={400} color=\"muted\">\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam laoreet non augue et faucibus. Ut arcu tellus, hendrerit id sem in, iaculis varius ipsum. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.\n          </Paragraph>\n        </Pane>\n        <Pane>\n          {\n            (this.state.ready) ?\n            (<TableCmp emptyMsg={`Nothing to display`} cols={this.state.tableCols} rows={this.state.tableData} />) :\n            <Busy/>\n          }\n        </Pane>\n      </article>\n    )\n  }\n}\n\nexport default PageTemplatesSearch;"],"sourceRoot":""}