{"version":3,"sources":["@components/TableCmp.js","@schema lazy /^/.//.*$/ groupOptions: {} namespace object","../../../../src/icons/generated/EditIcon.js","../../../../src/icons/generated/AddIcon.js","../../../../src/icons/generated/PlusIcon.js","../../../../src/typography/src/Strong.js","../../../../src/badges/src/Badge.js","@views/Config/SchemaList.js"],"names":["TableCmp","props","state","emptyMsg","this","Head","cols","map","col","index","TextHeaderCell","key","label","Body","rows","length","row","Row","height","isSelectable","TextCell","color","Component","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","svgPaths16","svgPaths20","EditIcon","memo","forwardRef","ref","name","AddIcon","PlusIcon","Strong","is","fontWeight","Text","styles","display","boxSizing","paddingTop","paddingRight","paddingBottom","paddingLeft","borderRadius","textAlign","textDecoration","textTransform","Badge","theme","useTheme","className","isInteractive","isSolid","restProps","themeProps","appearance","classNames","cx","size","PropTypes","bool","PageConfig__SchemaList","schemaLabel","tableCols","tableData","supportsTemplates","ready","mounted","updateTableData","a","schemaKey","SchemaCmp","default","ConfigService","getSchema","documentation","schema","table","getValue","SchemaValue","columns","forEach","tableRowData","column","undefined","type","to","match","path","iconBefore","item","marginRight","version","join","toString","push","setState","padding","background","flex","alignItems"],"mappings":"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","file":"static/js/15.70fc2cc2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Table, Text } from 'evergreen-ui'\n\nclass TableCmp extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      emptyMsg: 'No Results',\n      ...props\n    }\n  }\n  render() {\n    return (\n      <Table>\n      {\n        ('cols' in this.props)?(\n          <Table.Head>\n            {this.props.cols.map((col, index) => (<Table.TextHeaderCell key={col.key}>{col.label}</Table.TextHeaderCell>))}\n          </Table.Head>\n        ):null\n      }\n      <Table.Body>\n        {\n          (('rows' in this.props && this.props.rows.length)?(\n            this.props.rows.map((row, index) => (\n              <Table.Row key={index} height=\"auto\" isSelectable>\n                {this.props.cols.map(col => (\n                  <Table.TextCell key={col.key} height={50}>{row[col.key]}</Table.TextCell>)\n                )} \n              </Table.Row>\n            ))\n          ):(<Table.Row height={50}><Table.TextCell><Text color=\"muted\">{this.state.emptyMsg}</Text></Table.TextCell></Table.Row>))\n        }\n        \n      </Table.Body>\n      </Table>\n    )\n  }\n}\n\nexport default TableCmp;\n","var map = {\n\t\"./Blocks\": [\n\t\t207,\n\t\t2\n\t],\n\t\"./Blocks.js\": [\n\t\t207,\n\t\t2\n\t],\n\t\"./CustomFields\": [\n\t\t208,\n\t\t3\n\t],\n\t\"./CustomFields.js\": [\n\t\t208,\n\t\t3\n\t],\n\t\"./CustomPostType\": [\n\t\t209,\n\t\t4\n\t],\n\t\"./CustomPostType.js\": [\n\t\t209,\n\t\t4\n\t],\n\t\"./Pages\": [\n\t\t210,\n\t\t5\n\t],\n\t\"./Pages.js\": [\n\t\t210,\n\t\t5\n\t],\n\t\"./SchemaConfig\": [\n\t\t202,\n\t\t10\n\t],\n\t\"./SchemaConfig.js\": [\n\t\t202,\n\t\t10\n\t],\n\t\"./Scripts\": [\n\t\t211,\n\t\t6\n\t],\n\t\"./Scripts.js\": [\n\t\t211,\n\t\t6\n\t],\n\t\"./Settings\": [\n\t\t212,\n\t\t7\n\t],\n\t\"./Settings.js\": [\n\t\t212,\n\t\t7\n\t],\n\t\"./Styles\": [\n\t\t213,\n\t\t8\n\t],\n\t\"./Styles.js\": [\n\t\t213,\n\t\t8\n\t],\n\t\"./Taxonomies\": [\n\t\t214,\n\t\t9\n\t],\n\t\"./Taxonomies.js\": [\n\t\t214,\n\t\t9\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 216;\nmodule.exports = webpackAsyncContext;","import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M3.25 10.26l2.47 2.47 6.69-6.69-2.46-2.48-6.7 6.7zM.99 14.99l3.86-1.39-2.46-2.44-1.4 3.83zm12.25-14c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.44-1.44c.32-.32.51-.75.51-1.24.01-.95-.77-1.74-1.74-1.74z'\n]\nconst svgPaths20 = [\n  'M4.59 12.59l2.83 2.83 7.65-7.65-2.83-2.83-7.65 7.65zM2 18l4.41-1.59-2.81-2.79L2 18zM16 2c-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.65-1.65A2.006 2.006 0 0016 2z'\n]\n\nexport const EditIcon = memo(\n  forwardRef(function EditIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"edit\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M10.99 6.99h-2v-2c0-.55-.45-1-1-1s-1 .45-1 1v2h-2c-.55 0-1 .45-1 1s.45 1 1 1h2v2c0 .55.45 1 1 1s1-.45 1-1v-2h2c.55 0 1-.45 1-1s-.45-1-1-1zm-3-7c-4.42 0-8 3.58-8 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm0 14c-3.31 0-6-2.69-6-6s2.69-6 6-6 6 2.69 6 6-2.68 6-6 6z'\n]\nconst svgPaths20 = [\n  'M10 0C4.48 0 0 4.48 0 10s4.48 10 10 10 10-4.48 10-10S15.52 0 10 0zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm5-9h-4V5c0-.55-.45-1-1-1s-1 .45-1 1v4H5c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1v-4h4c.55 0 1-.45 1-1s-.45-1-1-1z'\n]\n\nexport const AddIcon = memo(\n  forwardRef(function AddIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"add\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M13 7H9V3c0-.55-.45-1-1-1s-1 .45-1 1v4H3c-.55 0-1 .45-1 1s.45 1 1 1h4v4c0 .55.45 1 1 1s1-.45 1-1V9h4c.55 0 1-.45 1-1s-.45-1-1-1z'\n]\nconst svgPaths20 = [\n  'M16 9h-5V4c0-.55-.45-1-1-1s-1 .45-1 1v5H4c-.55 0-1 .45-1 1s.45 1 1 1h5v5c0 .55.45 1 1 1s1-.45 1-1v-5h5c.55 0 1-.45 1-1s-.45-1-1-1z'\n]\n\nexport const PlusIcon = memo(\n  forwardRef(function PlusIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"plus\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { memo, forwardRef } from 'react'\nimport Text from './Text'\n\nconst Strong = memo(\n  forwardRef(function Strong(props, ref) {\n    return <Text is=\"strong\" fontWeight={600} {...props} ref={ref} />\n  })\n)\n\nStrong.propTypes = {\n  ...Text.propTypes\n}\n\nexport default Strong\n","import React, { memo, forwardRef } from 'react'\nimport cx from 'classnames'\nimport PropTypes from 'prop-types'\nimport { Strong } from '../../typography'\nimport { useTheme } from '../../theme'\n\nconst styles = {\n  display: 'inline-block',\n  boxSizing: 'border-box',\n  height: 16,\n  paddingTop: 0,\n  paddingRight: 6,\n  paddingBottom: 0,\n  paddingLeft: 6,\n  borderRadius: 2,\n  textAlign: 'center',\n  textDecoration: 'none',\n  textTransform: 'uppercase'\n}\n\nconst Badge = memo(\n  forwardRef(function Badge(props, ref) {\n    const theme = useTheme()\n\n    const {\n      className,\n      color = 'neutral',\n      isInteractive = false,\n      isSolid = false,\n      ...restProps\n    } = props\n\n    const themeProps = theme.getBadgeProps({ color, isSolid })\n    const appearance = isInteractive ? 'interactive' : 'default'\n    const classNames = cx(className, theme.getBadgeClassName(appearance))\n\n    return (\n      <Strong\n        ref={ref}\n        size={300}\n        {...styles}\n        {...themeProps}\n        {...restProps}\n        className={classNames}\n      />\n    )\n  })\n)\n\nBadge.propTypes = {\n  ...Strong.propTypes,\n\n  /**\n   * The color used for the badge.\n   */\n  color: PropTypes.string,\n\n  /**\n   * Whether or not to apply hover/focus/active styles\n   */\n  isInteractive: PropTypes.bool\n}\n\nexport default Badge\n","import React, { Component } from 'react'\nimport TableCmp from '../../@components/TableCmp';\nimport { NavLink } from 'react-router-dom';\nimport Busy from '../../@components/Busy';\nimport ConfigService from '../../@services/Config';\n\nimport { Pane, Heading, Button, AddIcon, EditIcon, Badge, PlusIcon, Text, TickIcon, CrossIcon } from 'evergreen-ui'\n\nclass PageConfig__SchemaList extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      schemaLabel: '...',\n      tableCols: [\n        {label:'Key', key: 'key'},\n        // {label:'Description', key: 'description'}\n      ],\n      tableData: [],\n      supportsTemplates: false,\n      ready: false\n    }\n    this.mounted = false\n  }\n  \n  componentDidMount()\n  {\n    \n    this.mounted = true\n    \n    this.updateTableData();\n\n  }\n\n  componentWillUnmount()\n  {\n    \n    this.mounted = false\n\n  }\n\n  async updateTableData() {\n    \n    if (!this.mounted) return;\n\n    import(`../../@schema/${this.props.schemaKey}`)\n      .then(SchemaCmp => new SchemaCmp.default())\n      .then(SchemaCmp=>{\n    \n      // TODO: cache schema response\n      ConfigService.getSchema(SchemaCmp.key)\n        .then(({ documentation, schema, supportsTemplates, table }) => {\n\n          ConfigService.getValue(SchemaCmp.key)\n            .then(SchemaValue => {\n\n              var tableCols = table.columns;\n\n              var tableData = [];\n\n              // run through each result, populate table columns\n              SchemaValue.forEach((row, index) => {\n\n                var tableRowData = {}\n\n                table.columns.forEach(column => {\n                  tableRowData[column.key] = (() => {\n                    if (undefined === row[column.key]) return;\n                    switch (column.type) {\n                      case 'key':\n                        return (<NavLink key={row[column.key]} to={`${this.props.match.path}/${row.key}`}><Button appearance=\"minimal\" iconBefore={EditIcon}>{row[column.key]}</Button></NavLink>);\n                      case 'boolean':\n                        return (row[column.key] === true ? (<TickIcon/>) : (<CrossIcon/>));\n                      case 'dependency[]':\n                        return (row[column.key].map((item, index) => {\n                          // TODO: add \"is internal\" check, and link to source.\n                          return (<Badge key={index} color=\"neutral\" marginRight={3}>{typeof item === \"string\" ? (item) : (`${item.id}@${item.version}`)}</Badge>)\n                        }))\n                      case 'string[]':\n                        return (<Text>{row[column.key].join(', ')}</Text>);\n                      default:\n                        return (<Text>{row[column.key].toString()}</Text>);\n                    }\n                  })()\n                })\n\n                tableData.push(tableRowData)\n\n              })\n          \n              if (!this.mounted) return;\n    \n              this.setState({\n                supportsTemplates: supportsTemplates || false,\n                tableCols: tableCols,\n                tableData: tableData,\n                ready: true\n              });\n\n            })\n\n        })\n\n    })\n    \n  }\n\n  render() {\n    return (\n      <article>\n        <Pane display=\"flex\" padding=\".5em\" background=\"tint2\">\n          <Pane flex={1} alignItems=\"center\" display=\"flex\">\n            <Heading size={600}>{this.props.schemaKey}</Heading>\n          </Pane>\n          <Pane>\n            {this.state.supportsTemplates?(\n              <NavLink to={`/templates/${this.props.schemaKey}`}><Button appearance=\"minimal\" iconBefore={AddIcon}>Add Template</Button></NavLink>\n            ):null}\n            <NavLink to={`${this.props.match.path}/new`}><Button appearance=\"minimal\" iconBefore={PlusIcon}>Add New</Button></NavLink>\n          </Pane>\n        </Pane>\n        <Pane>\n          {\n            (this.state.ready) ?\n            (<TableCmp emptyMsg={`No ${this.props.schemaKey}`} cols={this.state.tableCols} rows={this.state.tableData} />) :\n            <Busy/>\n          }\n        </Pane>\n      </article>\n    )\n  }\n}\n\nexport default PageConfig__SchemaList;"],"sourceRoot":""}