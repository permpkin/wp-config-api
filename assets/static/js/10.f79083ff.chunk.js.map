{"version":3,"sources":["../../../../src/icons/generated/RefreshIcon.js","@views/Tools/CodeSnippets.js"],"names":["svgPaths16","svgPaths20","RefreshIcon","memo","forwardRef","props","ref","name","PageToolsCodeSnippets","state","tableCols","label","key","tableData","ready","mounted","this","updateTableData","a","ConfigService","getList","then","values","setState","map","item","value","type","description","display","padding","background","flex","alignItems","size","appearance","iconBefore","color","emptyMsg","cols","rows","Component"],"mappings":"qLAGMA,EAAa,CAAnB,iaAGMC,EAAa,CAAnB,+ZAIaC,EAAcC,eACzBC,sBAAW,SAAqBC,EAAOC,GACrC,OACE,mCACEN,WADF,EAEEC,WAFF,EAGEK,IAHF,EAIEC,KAAK,WALT,S,uLCNEC,E,kDAEJ,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXC,UAAW,CACT,CAACC,MAAM,OAAQC,IAAK,QACpB,CAACD,MAAM,cAAeC,IAAK,gBAE7BC,UAAW,GACXC,OAAO,GAET,EAAKC,SAAU,EAVH,E,qDAad,WAGEC,KAAKD,SAAU,EAEfC,KAAKC,oB,kCAIP,WAGED,KAAKD,SAAU,I,oEAIjB,iCAAAG,EAAA,yDAEOF,KAAKD,QAFZ,iDAIEI,IAAcC,QAAQ,YAAY,GAC/BC,MAAK,SAACC,GAGL,EAAKC,SAAS,CACZV,UAAWS,EAAOE,KAAI,SAAAC,GACpB,MAAO,CAAEC,MAAOD,EAAKC,MAAOC,KAAMF,EAAKE,KAAMC,YAAaH,EAAKG,gBAEjEd,OAAO,OAZf,gD,0EAmBA,WACE,OACE,iCACE,kBAAC,IAAD,CAAMe,QAAQ,OAAOC,QAAQ,OAAOC,WAAW,SAC7C,kBAAC,IAAD,CAAMC,KAAM,EAAGC,WAAW,SAASJ,QAAQ,QACzC,kBAAC,IAAD,CAASK,KAAM,KAAf,kBAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,WAAW,UAAUC,WAAYlC,KAAzC,aAGJ,kBAAC,IAAD,CAAM4B,QAAQ,OACZ,kBAAC,IAAD,CAASI,KAAM,KAAf,iBACA,kBAAC,IAAD,CAAWA,KAAM,IAAKG,MAAM,SAA5B,iGAIF,kBAAC,IAAD,KAEKrB,KAAKP,MAAMK,MACX,kBAAC,IAAD,CAAUwB,SAAQ,qBAAwBC,KAAMvB,KAAKP,MAAMC,UAAW8B,KAAMxB,KAAKP,MAAMI,YACxF,kBAAC,IAAD,Y,GAvEwB4B,aA+ErBjC","file":"static/js/10.f79083ff.chunk.js","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M14.99 6.99c-.55 0-1 .45-1 1 0 3.31-2.69 6-6 6-1.77 0-3.36-.78-4.46-2h1.46c.55 0 1-.45 1-1s-.45-1-1-1h-4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1v-1.74a7.95 7.95 0 006 2.74c4.42 0 8-3.58 8-8 0-.55-.45-1-1-1zm0-7c-.55 0-1 .45-1 1v1.74a7.95 7.95 0 00-6-2.74c-4.42 0-8 3.58-8 8 0 .55.45 1 1 1s1-.45 1-1c0-3.31 2.69-6 6-6 1.77 0 3.36.78 4.46 2h-1.46c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1v-4c0-.55-.45-1-1-1z'\n]\nconst svgPaths20 = [\n  'M19 1c-.55 0-1 .45-1 1v2.06C16.18 1.61 13.29 0 10 0 4.48 0 0 4.48 0 10c0 .55.45 1 1 1s1-.45 1-1c0-4.42 3.58-8 8-8 2.52 0 4.76 1.18 6.22 3H15c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1V2c0-.55-.45-1-1-1zm0 8c-.55 0-1 .45-1 1 0 4.42-3.58 8-8 8-2.52 0-4.76-1.18-6.22-3H5c.55 0 1-.45 1-1s-.45-1-1-1H1c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1s1-.45 1-1v-2.06C3.82 18.39 6.71 20 10 20c5.52 0 10-4.48 10-10 0-.55-.45-1-1-1z'\n]\n\nexport const RefreshIcon = memo(\n  forwardRef(function RefreshIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"refresh\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { Component } from 'react'\nimport { Pane, Heading, Button, Paragraph, RefreshIcon } from 'evergreen-ui'\nimport TableCmp from '../../@components/TableCmp';\nimport ConfigService from '../../@services/Config';\nimport Busy from '../../@components/Busy';\n\nclass PageToolsCodeSnippets extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      tableCols: [\n        {label:'Type', key: 'type'},\n        {label:'Description', key: 'description'}\n      ],\n      tableData: [],\n      ready: false\n    }\n    this.mounted = false\n  }\n  \n  componentDidMount()\n  {\n    \n    this.mounted = true\n    \n    this.updateTableData();\n\n  }\n\n  componentWillUnmount()\n  {\n    \n    this.mounted = false\n\n  }\n\n  async updateTableData() {\n    \n    if (!this.mounted) return;\n    \n    ConfigService.getList('snippets', true)\n      .then((values) => {\n\n        //\n        this.setState({\n          tableData: values.map(item => {\n            return { value: item.value, type: item.type, description: item.description }\n          }),\n          ready: true\n        })\n\n      })\n    \n  }\n\n  render() {\n    return (\n      <article>\n        <Pane display=\"flex\" padding=\".5em\" background=\"tint2\">\n          <Pane flex={1} alignItems=\"center\" display=\"flex\">\n            <Heading size={600}>Code Snippets</Heading>\n          </Pane>\n          <Pane>\n            <Button appearance=\"minimal\" iconBefore={RefreshIcon}>Refresh</Button>\n          </Pane>\n        </Pane>\n        <Pane padding=\"1em\">\n          <Heading size={400}>What is this?</Heading>\n          <Paragraph size={400} color=\"muted\">\n            Generate boilerplate code using your custom post types/taxonomies/etc for use in your theme.\n          </Paragraph>\n        </Pane>\n        <Pane>\n          {\n            (this.state.ready) ?\n            (<TableCmp emptyMsg={`Nothing to display`} cols={this.state.tableCols} rows={this.state.tableData} />) :\n            <Busy/>\n          }\n        </Pane>\n      </article>\n    )\n  }\n}\n\nexport default PageToolsCodeSnippets;"],"sourceRoot":""}