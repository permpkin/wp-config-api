{"version":3,"sources":["../../../../src/icons/generated/EditIcon.js","../../../../src/typography/src/Pre.js","@components/Code.js","../../../../src/icons/generated/SavedIcon.js","../../../../src/icons/generated/TrashIcon.js","@views/Config/SchemaEdit.js"],"names":["svgPaths16","svgPaths20","EditIcon","memo","forwardRef","props","ref","name","Pre","is","marginTop","marginBottom","Text","Code","state","code","codeString","this","minHeight","Component","SavedIcon","TrashIcon","PageConfig__SchemaEdit","ready","busy","isDeleteShown","isShown","mounted","saveDocument","bind","handleChange","getSchemaValue","a","isNew","match","params","id","ConfigService","getSchema","schemaKey","then","documentation","schema","supportsTemplates","table","getValue","SchemaValue","isSingular","filter","item","key","length","SchemaFormValue","Object","keys","forEach","errors","onChange","value","setState","formData","undefined","default","type","map","version","Values","k","Value","columns","label","e","preventDefault","console","log","setValue","res","toaster","success","index","field","className","Busy","Form","data","Pane","display","padding","background","flex","alignItems","Heading","size","Button","appearance","iconBefore","TickIcon","backgroundColor","borderBottom","onClick","FloppyDiskIcon","intent","marginRight","SideSheet","onCloseComplete","formString","Dialog","hasHeader","isConfirmLoading","onConfirm","delete","formDoc","config","history","goBack","description","confirmLabel","Paragraph","color","schemaPath"],"mappings":"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","file":"static/js/6.3bdc4315.chunk.js","sourcesContent":["import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M3.25 10.26l2.47 2.47 6.69-6.69-2.46-2.48-6.7 6.7zM.99 14.99l3.86-1.39-2.46-2.44-1.4 3.83zm12.25-14c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.44-1.44c.32-.32.51-.75.51-1.24.01-.95-.77-1.74-1.74-1.74z'\n]\nconst svgPaths20 = [\n  'M4.59 12.59l2.83 2.83 7.65-7.65-2.83-2.83-7.65 7.65zM2 18l4.41-1.59-2.81-2.79L2 18zM16 2c-.55 0-1.05.22-1.41.59l-1.65 1.65 2.83 2.83 1.65-1.65A2.006 2.006 0 0016 2z'\n]\n\nexport const EditIcon = memo(\n  forwardRef(function EditIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"edit\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { memo, forwardRef } from 'react'\nimport Text from './Text'\n\nconst Pre = memo(\n  forwardRef(function Pre(props, ref) {\n    return <Text is=\"pre\" marginTop={0} marginBottom={0} {...props} ref={ref} />\n  })\n)\n\nPre.propTypes = {\n  ...Text.propTypes\n}\n\nexport default Pre\n","import React, { Component } from 'react'\nimport { Pre } from 'evergreen-ui'\n// import MonacoEditor from 'react-monaco-editor';\n\nclass Code extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: props.codeString || '// empty file'\n    }\n  }\n  // editorDidMount(editor, monaco) {\n  //   console.log('editorDidMount', editor);\n  //   editor.focus();\n  // }\n  // onChange(newValue, e) {\n  //   console.log('onChange', newValue, e);\n  // }\n  static getDerivedStateFromProps(props, state)\n  {\n    if (props.code !== state.code)\n      return {\n        code: props.codeString\n      };\n    return null;\n  }\n  render() {\n    const code = this.state.code;\n    return (\n      <Pre minHeight={'100%'}>\n        <code>{this.state.code}</code>\n      </Pre>\n      // <MonacoEditor\n      //   // width=\"800\"\n      //   height=\"600\"\n      //   language=\"json\"\n      //   theme=\"vs-dark\"\n      //   value={code}\n      //   options={options}\n      //   // onChange={this.onChange}\n      //   // editorDidMount={this.editorDidMount}\n      // />\n    )\n  }\n}\n\nexport default Code;\n","import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M6.71 9.29a1.003 1.003 0 00-1.42 1.42l2 2a.997.997 0 001.6-.27h.01l2-4h-.01c.06-.13.11-.28.11-.44 0-.55-.45-1-1-1-.39 0-.72.23-.89.56H9.1l-1.38 2.76-1.01-1.03zM9 0H3c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h10c.55 0 1-.45 1-1V5L9 0zm3 14H4V2h4v4h4v8z'\n]\nconst svgPaths20 = [\n  'M12 0H4c-.55 0-1 .45-1 1v18c0 .55.45 1 1 1h13c.55 0 1-.45 1-1V6l-6-6zm4 18H5V2h6v5h5v11zm-8.29-6.71a1.003 1.003 0 00-1.42 1.42l3 3c.18.18.43.29.71.29.32 0 .59-.16.77-.38l.01.01 4-5-.01-.01c.14-.18.23-.38.23-.62 0-.55-.45-1-1-1-.32 0-.59.16-.77.38l-.01-.01-3.3 4.13-2.21-2.21z'\n]\n\nexport const SavedIcon = memo(\n  forwardRef(function SavedIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"saved\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { memo, forwardRef } from 'react'\nimport Icon from '../src/Icon'\n\nconst svgPaths16 = [\n  'M14.49 3.99h-13c-.28 0-.5.22-.5.5s.22.5.5.5h.5v10c0 .55.45 1 1 1h10c.55 0 1-.45 1-1v-10h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zm-8.5 9c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm3 0c0 .55-.45 1-1 1s-1-.45-1-1v-6c0-.55.45-1 1-1s1 .45 1 1v6zm2-12h-4c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1h-4c-.55 0-1 .45-1 1v1h14v-1c0-.55-.45-1-1-1z'\n]\nconst svgPaths20 = [\n  'M17 1h-5c0-.55-.45-1-1-1H9c-.55 0-1 .45-1 1H3c-.55 0-1 .45-1 1v1h16V2c0-.55-.45-1-1-1zm.5 3h-15c-.28 0-.5.22-.5.5s.22.5.5.5H3v14c0 .55.45 1 1 1h12c.55 0 1-.45 1-1V5h.5c.28 0 .5-.22.5-.5s-.22-.5-.5-.5zM7 16c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8zm4 0c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8zm4 0c0 .55-.45 1-1 1s-1-.45-1-1V8c0-.55.45-1 1-1s1 .45 1 1v8z'\n]\n\nexport const TrashIcon = memo(\n  forwardRef(function TrashIcon(props, ref) {\n    return (\n      <Icon\n        svgPaths16={svgPaths16}\n        svgPaths20={svgPaths20}\n        ref={ref}\n        name=\"trash\"\n        {...props}\n      />\n    )\n  })\n)\n","import React, { Component } from 'react'\n// import { withRouter } from 'react-router-dom'\nimport Form from '../../@components/Form';\nimport ConfigService from '../../@services/Config';\nimport Code from '../../@components/Code';\n\nimport { SideSheet, Pane, Dialog, EditIcon, TickIcon, SavedIcon, TrashIcon, Heading, Paragraph, Button, FloppyDiskIcon, toaster } from 'evergreen-ui'\nimport Busy from '../../@components/Busy';\n\nclass PageConfig__SchemaEdit extends Component {\n\n  constructor(props)\n  {\n    super(props)\n    this.state = {\n      ready: false,\n      busy: true,\n      isDeleteShown: false,\n      isShown: false\n    }\n    this.mounted = false\n    this.saveDocument = this.saveDocument.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.getSchemaValue = this.getSchemaValue.bind(this)\n  }\n  \n  async componentDidMount()\n  {\n\n    this.mounted = true\n    \n    this.getSchemaValue()\n\n  }\n\n  getSchemaValue()\n  {\n\n    var isNew = this.props.match?.params.id === \"new\"\n\n    ConfigService.getSchema(this.props.schemaKey)\n      .then(({ documentation, schema, supportsTemplates, table }) => {\n\n        if (!this.mounted) return;\n\n        ConfigService.getValue(this.props.schemaKey)\n          .then(SchemaValue => this.props?.isSingular ? {} : SchemaValue.filter(item => item.key === this.props.match.params?.id))\n          .then(SchemaValue => this.props?.isSingular ? {} : (SchemaValue.length ? SchemaValue[0] : false))\n          .then(SchemaValue => isNew ? {} : SchemaValue)\n          .then(SchemaValue => {\n\n            if (!this.mounted) return;\n            \n            if (!SchemaValue && !isNew) return;\n\n            var SchemaFormValue = {}\n\n            Object.keys(schema).forEach(key => {\n\n              SchemaFormValue[key] = {\n                ...schema[key],\n                key: key,\n                errors: [],\n                onChange: (key, value) => {\n                  this.setState({\n                    formData: {...this.state.formData, [key]: { ...this.state.formData[key], value: value }}\n                  })\n                },\n                value: (() => {\n                  \n                  if (!(key in SchemaValue) || SchemaValue[key] === undefined) return schema[key].default || undefined;\n\n                  switch (schema[key]?.type)\n                  {\n                    case 'string[]':\n                      return SchemaValue[key].map(item => { return typeof item === \"string\" ? (item) : (`${item.id}@${item.version}`) });\n                    case 'keys':\n                      return (() => {\n                        var Values = {}\n                        Object.keys(schema[key].keys).forEach(k => {\n                          var Value = (k in SchemaValue[key]) ? SchemaValue[key][k] : (schema[key][k]?.default);\n                          if (undefined !== Value) Values[k] = Value;\n                        })\n                        return Values\n                      })();\n                    default:\n                      return SchemaValue[key];\n                  }\n\n                })()\n              }\n\n              // post value set field mods\n              if (schema[key]?.type === 'repeater')\n              {\n                SchemaFormValue[key].columns = 'columns' in SchemaFormValue[key] ? SchemaFormValue[key].columns : [{label:'Key', key: 'key'}];\n              }\n\n            })\n\n            this.setState({\n              isNew: isNew,\n              supportsTemplates: supportsTemplates,\n              formData: SchemaFormValue,\n              busy: false,\n              ready: true\n            })\n\n          })\n        \n      })\n  }\n\n  componentWillUnmount()\n  {\n    this.mounted = false\n  }\n\n  saveDocument(e)\n  {\n    e.preventDefault()\n    console.log(this.state.formData)\n    ConfigService.setValue(this.props.schemaKey, this.state.formData)\n      .then((res)=>{\n        \n        toaster.success('Saved Successfully')\n\n        if (!this.mounted) return;\n\n        this.getSchemaValue()\n\n      })\n    // this.setState({\n    //   busy: true\n    // })\n    // ConfigService.insert(this.props.schemaKey, JSON.parse(this.state.formString))\n    //   .then(() => {\n        // toaster.success(\n        //   'Saved Successfully',\n        //   {\n        //     description: 'Connect your source to a destination to receive data.'\n        //   }\n        // )\n        \n    //     if (!this.mounted) return;\n\n    //     this.setState({\n    //       isNew: false,\n    //       busy: false\n    //     })\n    //   })\n    //   .catch(res => {\n    //     toaster.danger(\n    //       'Error(s) Occurred!',\n    //       {\n    //         description: res\n    //       }\n    //     )\n        \n    //     if (!this.mounted) return;\n\n    //     this.setState({\n    //       busy: false\n    //     })\n    //   })\n  }\n\n  handleChange(index, field, value)\n  {\n    // if (!this.mounted) return;\n\n    // var formDoc = this.state.formDoc\n    \n    // var updatedField = formDoc.formData[index].fields.filter((item) => item.key === field).pop()\n\n    // updatedField.value = value\n    \n    // formDoc.formData[index].fields[(formDoc.formData[index].fields.findIndex((e)=>e.key === field))] = updatedField\n    // formDoc.config[field] = value\n    \n    // if (!this.mounted) return;\n\n    // this.setState({\n    //   formDoc: formDoc,\n    //   formData: formDoc.formData,\n    //   formString: JSON.stringify(formDoc.getValue(), null, 4),\n    // })\n  }\n\n  render() {\n    return (\n      <article>\n        {this.state.ready?(\n          <section className=\"split-content\">\n            <div className=\"split-content__left\">\n              {(!this.state.busy)?(\n                <Form className=\"split-content__form\" onChange={this.handleChange} data={this.state.formData}>\n                  <Pane display=\"flex\" padding=\".5em\" background=\"tint2\">\n                    <Pane flex={1} alignItems=\"center\" display=\"flex\">\n                      <Heading size={600}>{`${this.props.schemaKey} Config`}</Heading>\n                    </Pane>\n                    <Pane>\n                      {this.state.supportsTemplates?(\n                        <Button appearance=\"minimal\" iconBefore={SavedIcon}>Save as Template</Button>\n                      ):null}\n                      <Button appearance=\"minimal\" iconBefore={TickIcon}>Validate</Button>\n                    </Pane>\n                  </Pane>\n                </Form>\n              ):<Busy/>}\n            </div>\n            <div className=\"split-content__right\">\n              <Pane padding='.5em' backgroundColor='white' borderBottom=\"muted\">\n                <Button appearance=\"minimal\" onClick={this.saveDocument} iconBefore={FloppyDiskIcon}>{this.state.isNew?'Save':'Update'}</Button>\n                <Button appearance=\"minimal\" iconBefore={EditIcon} onClick={(e) => { e.preventDefault(); this.setState({ isShown: true }) }}>Edit Json</Button>\n                {!this.state.isNew?(<Button appearance=\"minimal\" intent=\"danger\" marginRight={'.5em'} iconBefore={TrashIcon} onClick={(e) => { e.preventDefault(); this.setState({ isDeleteShown: true })}}>Delete</Button>):(null)}\n              </Pane>\n            </div>\n          </section>\n        ):null}\n        <SideSheet\n          isShown={this.state.isShown}\n          onCloseComplete={() => this.setState({ isShown: false })}\n        >\n          <Code codeString={this.state.formString} />\n        </SideSheet>\n        <Dialog\n          isShown={this.state.isDeleteShown}\n          hasHeader={false}\n          intent=\"danger\"\n          isConfirmLoading={this.state.busy}\n          onConfirm={() => {\n            this.setState({ busy: true })\n            ConfigService.delete(this.props.schemaKey, this.state.formDoc.config.key)\n              .then(res => {\n                this.setState({ isDeleteShown: false })\n                this.props.history.goBack()\n                toaster.success(\n                  'Removed Successfully',\n                  {\n                    description: 'Connect your source to a destination to receive data.'\n                  }\n                )\n              })\n          }}\n          onCloseComplete={() => this.setState({ isDeleteShown: false, busy: false })}\n          confirmLabel=\"Delete\"\n        >\n          <Heading size={600}>Are you sure?</Heading>\n          <Paragraph size={400} color=\"muted\">\n            Removing this {this.props.schemaPath} may effect other components that require it.\n          </Paragraph>\n        </Dialog>\n      </article>\n    )\n  }\n}\n\nexport default PageConfig__SchemaEdit;\n"],"sourceRoot":""}